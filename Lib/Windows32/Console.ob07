(*
    Copyright 2013 Krotov Anton

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*)

лндскэ Console;

хлонпр sys := SYSTEM, WINAPI;

йнмяр
   Black* = 0;     Blue* = 1;          Green* = 2;       Cyan* = 3;
   Red* = 4;       Magenta* = 5;       Brown* = 6;       LightGray* = 7;
   DarkGray* = 8;  LightBlue* = 9;     LightGreen* = 10; LightCyan* = 11;
   LightRed* = 12; LightMagenta* = 13; Yellow* = 14;     White* = 15;

оепел
   hConsoleOutput: жекне;

опнжедспю IntToCard16(i: жекне): sys.CARD16;
   оепел
      w: sys.CARD16;
   мювюкн
      sys.GET(sys.ADR(i), w)
      бепмсрэ w
   йнмеж IntToCard16;

опнжедспю Card16ToInt(w: sys.CARD16): жекне;
   оепел
      i: жекне;
   мювюкн
      sys.PUT(sys.ADR(i), w)
      бепмсрэ i
   йнмеж Card16ToInt;

опнжедспю CoordToInt(Coord: WINAPI.TCoord): жекне;
   оепел
      res: жекне;
   мювюкн
      sys.GET(sys.ADR(Coord), res)
      бепмсрэ res
   йнмеж CoordToInt;

опнжедспю SetCursor*(X, Y: жекне);
   оепел
      Coord: WINAPI.TCoord;
   мювюкн
      Coord.X := IntToCard16(X);
      Coord.Y := IntToCard16(Y);
      WINAPI.SetConsoleCursorPosition(hConsoleOutput, CoordToInt(Coord));
   йнмеж SetCursor;

опнжедспю GetCursor*(оеп X, Y: жекне);
   оепел
      ScrBufInfo: WINAPI.TConsoleScreenBufferInfo;
   мювюкн
      WINAPI.GetConsoleScreenBufferInfo(hConsoleOutput, ScrBufInfo);
      X := Card16ToInt(ScrBufInfo.dwCursorPosition.X);
      Y := Card16ToInt(ScrBufInfo.dwCursorPosition.Y)
   йнмеж GetCursor;

опнжедспю Cls*;
   оепел
      fill: жекне;
      ScrBufInfo: WINAPI.TConsoleScreenBufferInfo;
   мювюкн
      WINAPI.GetConsoleScreenBufferInfo(hConsoleOutput, ScrBufInfo);
      fill := Card16ToInt(ScrBufInfo.dwSize.X) * Card16ToInt(ScrBufInfo.dwSize.Y);
      WINAPI.FillConsoleOutputCharacter(hConsoleOutput, 20H, fill, 0, sys.ADR(fill));
      WINAPI.FillConsoleOutputAttribute(hConsoleOutput, Card16ToInt(ScrBufInfo.wAttributes), fill, 0, sys.ADR(fill));
      SetCursor(0, 0);
   йнмеж Cls;

опнжедспю жБЕР_сЯР*(ЙСПЯНП_, ТНМ_: жекне);
   мювюкн
      еякх (ЙСПЯНП_ б {0..15}) & (ТНМ_ б {0..15}) рнцдю
         WINAPI.SetConsoleTextAttribute(hConsoleOutput, LSL(ТНМ_, 4) + ЙСПЯНП_)
      йнмеж
   йнмеж жБЕР_сЯР;

опнжедспю GetCursorX*(): жекне;
   оепел
      ScrBufInfo: WINAPI.TConsoleScreenBufferInfo;
   мювюкн
      WINAPI.GetConsoleScreenBufferInfo(hConsoleOutput, ScrBufInfo)
      бепмсрэ Card16ToInt(ScrBufInfo.dwCursorPosition.X)
   END GetCursorX;

опнжедспю GetCursorY*(): жекне;
   оепел
      ScrBufInfo: WINAPI.TConsoleScreenBufferInfo;
   мювюкн
      WINAPI.GetConsoleScreenBufferInfo(hConsoleOutput, ScrBufInfo)
      бепмсрэ Card16ToInt(ScrBufInfo.dwCursorPosition.Y)
   йнмеж GetCursorY;

мювюкн
   hConsoleOutput := WINAPI.GetStdHandle(-11);
йнмеж Console.
