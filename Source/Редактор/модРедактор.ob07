(* Попытка создать редактор без необходимости привлечения
   массовых виндовых функций.
   BSD-2 *)
МОДУЛЬ модРедактор;

ИМПОРТ mSys := SYSTEM,
   API := модАПИ;

КОНСТ
   hot_new = 0;
   hot_open = 1;
ТИПЫ
   STRING = МАССИВ 2048 ИЗ СИМВ;
   
ПЕРЕМ
   CreateWindowEx: ПРОЦЕДУРА [winapi] (dwExStyle, lpClassName, lpWindowName, dwStyle, X, Y,
                                       nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam: ЦЕЛОЕ): ЦЕЛОЕ;
   blocksel: БУЛЕВО;
   paramcolor: ЦЕЛОЕ;
   Shift, hotkeys: SET;
   
ПРОЦЕДУРА ОкноСоздать(lpClassName, lpWindowName: МАССИВ ИЗ СИМВ;
                      dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam: ЦЕЛОЕ): ЦЕЛОЕ;
   ПЕРЕМ
      n: ЦЕЛОЕ; class, window: ЦЕЛОЕ;
   НАЧАЛО
     ВЕРНУТЬ CreateWindowEx(0, mSys.ADR(class), mSys.ADR(window), dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam)
   КОНЕЦ ОкноСоздать;
   
ПРОЦЕДУРА Настроить;
   VAR
      user32, kernel32, gdi32, comctl32, comdlg32, shell32: INTEGER;

   ПРОЦЕДУРА GetProc(name: STRING; hMOD, adr: ЦЕЛОЕ);
      ПЕРЕМ
         H: INTEGER;
      НАЧАЛО
         H := API.GetProcAddress(hMOD, mSys.ADR(name));
         КОНТРОЛЬ(H # 0);
         mSys.PUT(adr, H);
      КОНЕЦ GetProc;

   НАЧАЛО
      user32 := API.LoadLibraryA(mSys.ADR("user32.dll"));
      ASSERT(user32 # 0);
      kernel32 := API.LoadLibraryA(mSys.ADR("kernel32.dll"));
      ASSERT(kernel32 # 0);
      gdi32 := API.LoadLibraryA(mSys.ADR("gdi32.dll"));
      ASSERT(gdi32 # 0);
      comctl32 := API.LoadLibraryA(mSys.ADR("comctl32.dll"));
      ASSERT(comctl32 # 0);
      comdlg32 := API.LoadLibraryA(mSys.ADR("comdlg32.dll"));
      ASSERT(comdlg32 # 0);
      shell32 := API.LoadLibraryA(mSys.ADR("shell32.dll"));
      ASSERT(comctl32 # 0);
      GetProc("ShellExecuteW", shell32, mSys.ADR(ShellExecute));
      GetProc("MoveFileW", kernel32, mSys.ADR(MoveFile));
      GetProc("DeleteFileW", kernel32, mSys.ADR(DeleteFile));
      GetProc("CloseHandle", kernel32, mSys.ADR(CloseHandle));
      GetProc("GetCurrentDirectoryW", kernel32, mSys.ADR(GetCurrentDirectory));
      GetProc("DefWindowProcW", user32, mSys.ADR(DefWindowProc));
      GetProc("LoadCursorW", user32, mSys.ADR(LoadCursor));
      GetProc("LoadIconW", user32, mSys.ADR(LoadIcon));
      GetProc("RegisterClassExW", user32, mSys.ADR(RegisterClassEx));
      GetProc("DispatchMessageW", user32, mSys.ADR(DispatchMessage));
      GetProc("GetMessageW", user32, mSys.ADR(GetMessage));
      GetProc("SendMessageW", user32, mSys.ADR(SendMessage));
      GetProc("InsertMenuItemW", user32, mSys.ADR(InsertMenuItem));
      GetProc("GetModuleHandleW", kernel32, mSys.ADR(GetModuleHandle));
      GetProc("MoveWindow", user32, mSys.ADR(MoveWindow));
      GetProc("CreateWindowExW", user32, mSys.ADR(CreateWindowEx));
      GetProc("PostQuitMessage", user32, mSys.ADR(PostQuitMessage));
      GetProc("ShowWindow", user32, mSys.ADR(ShowWindow));
      GetProc("TranslateMessage", user32, mSys.ADR(TranslateMessage));
      GetProc("CheckMenuItem", user32, mSys.ADR(CheckMenuItem));
      GetProc("EnableMenuItem", user32, mSys.ADR(EnableMenuItem));
      GetProc("CheckMenuRadioItem", user32, mSys.ADR(CheckMenuRadioItem));
      GetProc("CreateMenu", user32, mSys.ADR(CreateMenu));
      GetProc("CreatePopupMenu", user32, mSys.ADR(CreatePopupMenu));
      GetProc("DrawMenuBar", user32, mSys.ADR(DrawMenuBar));
      GetProc("SetScrollPos", user32, mSys.ADR(SetScrollPos));
      GetProc("GetScrollInfo", user32, mSys.ADR(GetScrollInfo));
      GetProc("SetScrollRange", user32, mSys.ADR(SetScrollRange));
      GetProc("GetClientRect", user32, mSys.ADR(GetClientRect));
      GetProc("GetDC", user32, mSys.ADR(GetDC));
      GetProc("SetTimer", user32, mSys.ADR(SetTimer));
      GetProc("KillTimer", user32, mSys.ADR(KillTimer));
      GetProc("CreateFontW", gdi32, mSys.ADR(CreateFont));
      GetProc("SelectObject", gdi32, mSys.ADR(SelectObject));
      GetProc("SetCursor", user32, mSys.ADR(SetCursor));
      GetProc("CreateCompatibleDC", gdi32, mSys.ADR(CreateCompatibleDC));
      GetProc("CreateCompatibleBitmap", gdi32, mSys.ADR(CreateCompatibleBitmap));
      GetProc("GetDesktopWindow", user32, mSys.ADR(GetDesktopWindow));
      GetProc("ReleaseDC", user32, mSys.ADR(ReleaseDC));
      GetProc("SetFocus", user32, mSys.ADR(SetFocus));
      GetProc("TrackPopupMenu", user32, mSys.ADR(TrackPopupMenu));
      GetProc("ScreenToClient", user32, mSys.ADR(ScreenToClient));
      GetProc("UpdateWindow", user32, mSys.ADR(UpdateWindow));
      GetProc("InvalidateRect", user32, mSys.ADR(InvalidateRect));
      GetProc("GetCaretBlinkTime", user32, mSys.ADR(GetCaretBlinkTime));
      GetProc("GetCursorPos", user32, mSys.ADR(GetCursorPos));
      GetProc("GetKeyState", user32, mSys.ADR(GetKeyState));
      GetProc("RegisterWindowMessageA", user32, mSys.ADR(RegisterWindowMessage));
      GetProc("CreateStatusWindow", comctl32, sys.ADR(CreateStatusWindow));
      GetProc("BitBlt", gdi32, mSys.ADR(BitBlt));
      GetProc("GetTextExtentPoint32A", gdi32, mSys.ADR(GetTextExtentPoint32));
      GetProc("GetOpenFileNameW", comdlg32, mSys.ADR(GetOpenFileName));
      GetProc("GetSaveFileNameW", comdlg32, mSys.ADR(GetSaveFileName));
      GetProc("ChooseColorW", comdlg32, mSys.ADR(ChooseColor));
      GetProc("FindTextW", comdlg32, mSys.ADR(FindTextW));
      GetProc("ReplaceTextW", comdlg32, mSys.ADR(ReplaceTextW));
   END Настроить;

НАЧАЛО
   Настроить
КОНЕЦ модРедактор.
