МОДУЛЬ UTILS;

(*
    Copyright 2013 Krotov Anton

    This file is part of Compiler.

    Compiler is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Compiler is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Compiler. If not, see <http://www.gnu.org/licenses/>.
    *)

ИМПОРТ СИС := SYSTEM,
    мАпи := API,
    мКонст := modConstante,
    мСтр := modString,
    мОш := modError,
    мКонс := modConsole;

ПЕРЕМ
    параметры: МАССИВ мКонст._парам_макс, 2 ИЗ ЦЕЛОЕ;
    парам_всего*, строка*, юнит*: ЦЕЛОЕ;
    win, kos, lnx: БУЛЕВО;
    файл_путь: мСтр.тСтрока;

ПРОЦЕДУРА ФайлПуть_Уст*(файл_путь_: мСтр.тСтрока);
    НАЧАЛО
        файл_путь := файл_путь_
    КОНЕЦ ФайлПуть_Уст;

ПРОЦЕДУРА ЕслиБесконеч*(вдЗнач_: ДЛИНВЕЩ): БУЛЕВО;
    ПЕРЕМ
        верх, низ: SET;
    НАЧАЛО
      СИС.GET(СИС.ADR(вдЗнач_), низ);
      СИС.GET(СИС.ADR(вдЗнач_) + 4, верх);
      ВЕРНУТЬ (верх * {20..30} = {20..30}) & (верх * {0..19} = {}) & (низ * {0..31} = {})
    КОНЕЦ ЕслиБесконеч;

ПРОЦЕДУРА Симв_Получ(адр_: ЦЕЛОЕ): СИМВ;
    ПЕРЕМ
        результат: СИМВ;
    НАЧАЛО
      СИС.GET(адр_, результат)
      ВЕРНУТЬ результат
    КОНЕЦ Симв_Получ;

ПРОЦЕДУРА Параметры_Выделить(счетчик_: ЦЕЛОЕ);
    ПЕРЕМ
        симв: СИМВ;
        cond, p: ЦЕЛОЕ;

    ПРОЦЕДУРА ChangeCond(A, B, C: ЦЕЛОЕ);
        НАЧАЛО
            cond := C;
            ВЫБРАТЬ симв ИЗ
                |0X: cond := 6
                |1X..20X: cond := A
                |22X: cond := B
            ИНАЧЕ
            КОНЕЦ
      КОНЕЦ ChangeCond;

    НАЧАЛО
      p := мАпи.GetCommandLine();
      cond := 0;
      ПОКА (счетчик_ < мКонст._парам_макс) & (cond # 6) ДЕЛАТЬ
        симв := Симв_Получ(p);
        ВЫБРАТЬ cond ИЗ
        |0: ChangeCond(0, 4, 1);
            ЕСЛИ cond = 1 ТОГДА
                параметры[счетчик_, 0] := p
            КОНЕЦ
        |4: ChangeCond(5, 0, 5);
            ЕСЛИ cond = 5 ТОГДА
                параметры[счетчик_, 0] := p
            КОНЕЦ
        |1: ChangeCond(0, 3, 1);
            ЕСЛИ cond ВХОДИТ {0, 6} ТОГДА
                параметры[счетчик_, 1] := p - 1;
                ДОБ(счетчик_)
            КОНЕЦ
        |3, 5: ChangeCond(cond, 1, cond);
            ЕСЛИ cond = 6 ТОГДА
                параметры[счетчик_, 1] := p - 1;
                ДОБ(счетчик_)
            КОНЕЦ
        ИНАЧЕ
        КОНЕЦ;
        ДОБ(p)
      КОНЕЦ;
      парам_всего := счетчик_ - 1
    КОНЕЦ Параметры_Выделить;

ПРОЦЕДУРА СтрПарам_Уст*(ПЕРЕМ str: МАССИВ ИЗ СИМВ; n: ЦЕЛОЕ);
    ПЕРЕМ i, j, len: ЦЕЛОЕ; c: СИМВ;
    НАЧАЛО
      j := 0;
      ЕСЛИ n <= парам_всего ТОГДА
        len := LEN(str) - 1;
        i := параметры[n, 0];
        ПОКА (j < len) & (i <= параметры[n, 1]) ДЕЛАТЬ
          c := Симв_Получ(i);
          ЕСЛИ c # 22X ТОГДА
            str[j] := c;
            ДОБ(j)
          КОНЕЦ;
          ДОБ(i)
        КОНЕЦ
      КОНЕЦ;
      str[j] := 0X
    КОНЕЦ СтрПарам_Уст;

ПРОЦЕДУРА ПамятьНов_Получ*(n: ЦЕЛОЕ): ЦЕЛОЕ;
      ВЕРНУТЬ мАпи.Alloc(64, n)
    КОНЕЦ ПамятьНов_Получ;

ПРОЦЕДУРА ОшибПоз_Печать*(line, col, code: ЦЕЛОЕ);
    ПЕРЕМ
        s: мСтр.тСтрока;
    НАЧАЛО
        мКонс.Стр_Печать("Ошибка UTIL: "); мКонс.Цел_Печать(code); мКонс.Стр_Нов;
        мКонс.Стр_Печать("Файл:  "); мКонс.Стр_Печать(файл_путь); мКонс.Стр_Нов;
        мКонс.Стр_Печать("Строка:  "); мКонс.Цел_Печать(line);
        мКонс.Стр_Печать("  Место:   "); мКонс. Цел_Печать(col); мКонс.Стр_Нов;
        мОш.Сообщ(code)
    КОНЕЦ ОшибПоз_Печать;

ПРОЦЕДУРА ЮнитСтрока_Уст*(newUnit, newLine: ЦЕЛОЕ);
    НАЧАЛО
      юнит := newUnit;
      строка := newLine
    КОНЕЦ ЮнитСтрока_Уст;

ПРОЦЕДУРА Мин_Получ*(a, b: ЦЕЛОЕ): ЦЕЛОЕ;
    ПЕРЕМ Res: ЦЕЛОЕ;
    НАЧАЛО
      ЕСЛИ a < b ТОГДА
        Res := a
      ИНАЧЕ
        Res := b
      КОНЕЦ
      ВЕРНУТЬ Res
    КОНЕЦ Мин_Получ;

ПРОЦЕДУРА Выровнять*(n: ЦЕЛОЕ): ЦЕЛОЕ;
      ВЕРНУТЬ (4 - n MOD 4) MOD 4
    КОНЕЦ Выровнять;

ПРОЦЕДУРА Стр_соединить*(a, b: МАССИВ ИЗ СИМВ): БУЛЕВО;
    ПЕРЕМ i: ЦЕЛОЕ;
    НАЧАЛО
      i := -1;
      ПОВТОРЯТЬ
        ДОБ(i)
      СНОВА (мСтр.Заглав_Получ(a[i]) # мСтр.Заглав_Получ(b[i])) ИЛИ (a[i] = 0X) ИЛИ (b[i] = 0X)
      ВЕРНУТЬ a[i] = b[i]
    КОНЕЦ Стр_соединить;

ПРОЦЕДУРА ТриСтр_соединить*(L, R: МАССИВ ИЗ СИМВ; ПЕРЕМ Res: МАССИВ ИЗ СИМВ);
    ПЕРЕМ i, j: ЦЕЛОЕ;
    НАЧАЛО
      i := 0;
      ПОКА (L[i] # 0X) & (i - 1 < LEN(Res)) ДЕЛАТЬ
        Res[i] := L[i];
        ДОБ(i)
      КОНЕЦ;
      j := 0;
      ПОКА (R[j] # 0X) & (j + i - 1 < LEN(Res)) ДЕЛАТЬ
        Res[j + i] := R[j];
        ДОБ(j)
      КОНЕЦ;
      Res[j + i] := 0X
    КОНЕЦ ТриСтр_соединить;

ПРОЦЕДУРА ФайлПуть_Разделить*(FName: мСтр.тСтрока; ПЕРЕМ Path, Name, Ext: мСтр.тСтрока);
    ПЕРЕМ i, j, k: ЦЕЛОЕ;
    НАЧАЛО
      i := LENGTH(FName) - 1;
      j := 0;
      ПОКА (i >= 0) & (FName[i] # мАпи.Slash) ДЕЛАТЬ
        Name[j] := FName[i];
        ВЫЧ(i);
        ДОБ(j)
      КОНЕЦ;
      Name[j] := 0X;
      мСтр.Стр_Реверс(Name);
      j := 0;
      k := LENGTH(Name) - 1;
      ПОКА (k >= 0) & (Name[k] # ".") ДЕЛАТЬ
        Ext[j] := Name[k];
        ВЫЧ(k);
        ДОБ(j)
      КОНЕЦ;
      ЕСЛИ k >= 0 ТОГДА
        Name[k] := 0X;
        Ext[j] := ".";
        ДОБ(j)
      ИНАЧЕ
        j := 0
      КОНЕЦ;
      Ext[j] := 0X;
      мСтр.Стр_Реверс(Ext);
      j := i;
      ДЛЯ i := 0 ДО j ДЕЛАТЬ
        Path[i] := FName[i]
      КОНЕЦ;
      Path[j + 1] := 0X
    КОНЕЦ ФайлПуть_Разделить;

ПРОЦЕДУРА ЛинуксПарам_Уст;
    ПЕРЕМ
        парам, i, str: ЦЕЛОЕ;
        симв: СИМВ;
    НАЧАЛО
        парам := мАпи.GetCommandLine();
        СИС.GET(парам, парам_всего);
        СИС.GET(парам + 4, парам);
        ДЛЯ i := 0 ДО парам_всего - 1 ДЕЛАТЬ
            СИС.GET(парам + i * 4, str);
            параметры[i, 0] := str;
            ПОВТОРЯТЬ
                СИС.GET(str, симв);
                ДОБ(str)
            СНОВА симв = 0X;
            параметры[i, 1] := str - 1
        КОНЕЦ;
        ВЫЧ(парам_всего)
    КОНЕЦ ЛинуксПарам_Уст;

ПРОЦЕДУРА Настроить;
    
    ПРОЦЕДУРА Парам_Последний(ПЕРЕМ парам_: ЦЕЛОЕ);
        НАЧАЛО
            ПОКА Симв_Получ(парам_) # 0X ДЕЛАТЬ
                ДОБ(парам_)
            КОНЕЦ;
            ВЫЧ(парам_)
        КОНЕЦ Парам_Последний;
    
    НАЧАЛО
        ЕСЛИ мКонст._win ТОГДА
            Параметры_Выделить(0)
        АЕСЛИ мКонст._kos ТОГДА
            Параметры_Выделить(1);
            параметры[0, 0] := мАпи.GetName();
            параметры[0, 1] := параметры[0, 0];
            Парам_Последний(параметры[0, 1])
        АЕСЛИ мКонст._lnx ТОГДА
            ЛинуксПарам_Уст
        КОНЕЦ
    КОНЕЦ Настроить;

НАЧАЛО
    Настроить
КОНЕЦ UTILS.
