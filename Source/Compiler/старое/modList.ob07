МОДУЛЬ modList;
(* предоставляет тип списка
      BSD-2
    *)

ТИПЫ
    туУзел* = УКАЗАТЕЛЬ НА тУзел;

    тУзел* = ЗАПИСЬ
        следующ*, предыдущ*: туУзел
    КОНЕЦ;

    туСписок* = УКАЗАТЕЛЬ НА ЗАПИСЬ
        первый*, последний*: туУзел;
        спис_длин*: ЦЕЛОЕ
    КОНЕЦ;

ПРОЦЕДУРА Создать*(): туСписок;
    ПЕРЕМ
        спис_нов: туСписок;
    НАЧАЛО
        НОВ(спис_нов);
        ВЕРНУТЬ спис_нов
    КОНЕЦ Создать;

ПРОЦЕДУРА Очистить*(ПЕРЕМ сам: туСписок);
    НАЧАЛО
        сам.первый := ПУСТО;
        сам.последний := ПУСТО;
        сам.спис_длин := 0
    КОНЕЦ Очистить;

ПРОЦЕДУРА Добавить*(ПЕРЕМ сам: туСписок; узел_: туУзел);
    НАЧАЛО
        ЕСЛИ сам.спис_длин = 0 ТОГДА
            сам.первый := узел_;
            узел_.предыдущ := ПУСТО
        ИНАЧЕ
            сам.последний.следующ := узел_;
            узел_.предыдущ := сам.последний
        КОНЕЦ;
        ДОБ(сам.спис_длин);
        сам.последний := узел_;
        узел_.следующ := ПУСТО
    КОНЕЦ Добавить;

ПРОЦЕДУРА Вставить*(ПЕРЕМ сам: туСписок; узел_, предыдущ_: туУзел);
    НАЧАЛО
        ЕСЛИ предыдущ_ # сам.последний ТОГДА
            узел_.следующ := предыдущ_.следующ;
            узел_.предыдущ := предыдущ_;
            предыдущ_.следующ := узел_;
            узел_.следующ.предыдущ := узел_;
            ДОБ(сам.спис_длин)
        ИНАЧЕ
            Добавить(сам, узел_)
        КОНЕЦ
    КОНЕЦ Вставить;

КОНЕЦ modList.
