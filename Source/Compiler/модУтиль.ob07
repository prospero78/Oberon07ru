(*
    Copyright 2013 Krotov Anton

    This file is part of Compiler.

    Compiler is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Compiler is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Compiler. If not, see <http://www.gnu.org/licenses/>.
  *)

МОДУЛЬ модУтиль;

ИМПОРТ mSys := SYSTEM,
    API,
    мКонст := модКонстанты,
    мТипы := модТипы,
    мФайл := модФайл,
    мКонс := модКонсоль,
    мПам := модПамять,
    мСтр := модСтроки;

ПЕРЕМ

  масПараметры: МАССИВ мКонст.макс_парам, 2 ИЗ INTEGER;
  ParamCount*, Line*, Unit*: INTEGER;
  (* код_строка : МАССИВ 128 ИЗ CHAR; *)

ПРОЦЕДУРА Бесконеч*(x_: LONGREAL): BOOLEAN;
  ПЕРЕМ
    h, l: SET;
  НАЧАЛО
    mSys.GET(mSys.ADR(x_), l);
    mSys.GET(mSys.ADR(x_) + 4, h);
    ВЕРНУТЬ (h * {20..30} = {20..30}) & (h * {0..19} = {}) & (l * {0..31} = {})
  КОНЕЦ Бесконеч;

ПРОЦЕДУРА Сивол_Получ(adr_: INTEGER): CHAR;
  ПЕРЕМ
   res: CHAR;
  НАЧАЛО
    mSys.GET(adr_, res)
    ВЕРНУТЬ res
  КОНЕЦ Сивол_Получ;

ПРОЦЕДУРА Параметры_Проверить(count: INTEGER);
   ПЕРЕМ c: CHAR; cond, p: INTEGER;

   ПРОЦЕДУРА Условия_Изменить(A, B, C: INTEGER);
      НАЧАЛО
         cond := C;
         ВЫБОР c ИЗ
            |0X: cond := 6
            |1X..20X: cond := A
            |22X: cond := B
         ИНАЧЕ
         КОНЕЦ
      КОНЕЦ Условия_Изменить;

   НАЧАЛО
      p := API.GetCommandLine();
      cond := 0;
      ПОКА (count < мКонст.макс_парам) & (cond # 6) ДЕЛАТЬ
         c := Сивол_Получ(p);
         ВЫБОР cond ИЗ
            |0: Условия_Изменить(0, 4, 1);
               ЕСЛИ cond = 1 ТОГДА
                  масПараметры[count, 0] := p
               КОНЕЦ
            |4: Условия_Изменить(5, 0, 5);
                ЕСЛИ cond = 5 ТОГДА
                  масПараметры[count, 0] := p
                КОНЕЦ
            |1: Условия_Изменить(0, 3, 1);
                ЕСЛИ cond IN {0, 6} ТОГДА
                  масПараметры[count, 1] := p - 1;
                  INC(count)
                КОНЕЦ
            |3, 5: Условия_Изменить(cond, 1, cond);
                   ЕСЛИ cond = 6 ТОГДА
                     масПараметры[count, 1] := p - 1;
                     INC(count)
                   КОНЕЦ
         ИНАЧЕ
         КОНЕЦ;
         INC(p)
      КОНЕЦ;
      ParamCount := count - 1
   КОНЕЦ Параметры_Проверить;

ПРОЦЕДУРА СтрПарам*(ПЕР str: МАССИВ ИЗ CHAR; n: INTEGER);
  ПЕРЕМ
   i, j, len: INTEGER; c: CHAR;
  НАЧАЛО
    j := 0;
    ЕСЛИ n <= ParamCount ТОГДА
      len := LEN(str) - 1;
      i := масПараметры[n, 0];
      ПОКА (j < len) & (i <= масПараметры[n, 1]) ДЕЛАТЬ
        c := Сивол_Получ(i);
        ЕСЛИ c # 22X ТОГДА
          str[j] := c;
          INC(j)
        КОНЕЦ;
        INC(i)
      КОНЕЦ
    КОНЕЦ;
    str[j] := 0X
  КОНЕЦ СтрПарам;

ПРОЦЕДУРА КодСтрока_Уст*(newUnit, newLine: INTEGER);
  НАЧАЛО
    Unit := newUnit;
    Line := newLine
  КОНЕЦ КодСтрока_Уст;

ПРОЦЕДУРА Минимум*(a, b: INTEGER): INTEGER;
  ПЕРЕМ Res: INTEGER;
  НАЧАЛО
    ЕСЛИ a < b ТОГДА
      Res := a
    ИНАЧЕ
      Res := b
    КОНЕЦ
    ВЕРНУТЬ Res
  КОНЕЦ Минимум;

ПРОЦЕДУРА streq*(a, b: МАССИВ ИЗ CHAR): BOOLEAN;
  ПЕРЕМ i: INTEGER;
  НАЧАЛО
    i := -1;
    ПОВТОРЯТЬ
      INC(i)
    ПОКАНЕ (мСтр.Заглав(a[i]) # мСтр.Заглав(b[i])) ИЛИ (a[i] = 0X) ИЛИ (b[i] = 0X)
    ВЕРНУТЬ a[i] = b[i]
  КОНЕЦ streq;



ПРОЦЕДУРА PChar*(s: МАССИВ ИЗ CHAR): INTEGER;
    ВЕРНУТЬ mSys.ADR(s)
  КОНЕЦ PChar;

ПРОЦЕДУРА LinuxParam;
  ПЕРЕМ
     p, i, str: INTEGER; c: CHAR;
  НАЧАЛО
    p := API.GetCommandLine();
    mSys.GET(p, ParamCount);
    mSys.GET(p + 4, p);
    ДЛЯ i := 0 ДО ParamCount - 1 ДЕЛАТЬ
      mSys.GET(p + i * 4, str);
      масПараметры[i, 0] := str;
      ПОВТОРЯТЬ
        mSys.GET(str, c);
        INC(str)
      ПОКАНЕ c = 0X;
      масПараметры[i, 1] := str - 1
    КОНЕЦ;
    DEC(ParamCount)
  КОНЕЦ LinuxParam;

ПРОЦЕДУРА Настроить;
   ПЕРЕМ
      p, count: INTEGER;

    ПРОЦЕДУРА last(ПЕР p: INTEGER);
      НАЧАЛО
         ПОКА Сивол_Получ(p) # 0X ДЕЛАТЬ
            INC(p)
         КОНЕЦ;
           DEC(p)
      КОНЕЦ last;

  НАЧАЛО
    ЕСЛИ мКонст.win ТОГДА
      мКонс.Вывод_Открыть;
      Параметры_Проверить(0)
    АЕСЛИ мКонст.kol ТОГДА
      Параметры_Проверить(1);
      масПараметры[0, 0] := API.GetName();
      масПараметры[0, 1] := масПараметры[0, 0];
      last(масПараметры[0, 1])
    АЕСЛИ мКонст.lin ТОГДА
      мКонс.Вывод_Открыть;
      LinuxParam
    КОНЕЦ
  КОНЕЦ Настроить;

НАЧАЛО
  Настроить
КОНЕЦ модУтиль.
