(*
      Copyright 2013 Krotov Anton

      This file is part of Compiler.

      Compiler is free software: you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation, either version 3 of the License, or
      (at your option) any later version.

      Compiler is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.

      You should have received a copy of the GNU General Public License
      along with Compiler. If not, see <http://www.gnu.org/licenses/>.
      *)

МОДУЛЬ модУтиль;

ИМПОРТ mSys := SYSTEM,
      мАпи := API,
      мКонст := модКонстанты,
      мФайл := модФайл,
      мКонс := модКонсоль,
      мПам := модПамять,
      мСтр := модСтроки;

ПЕРЕМ

      масПараметры: МАССИВ мКонст.макс_парам, 2 ИЗ ЦЕЛОЕ;
      параметры_всего*, строка_ном*, модуль_ном*: ЦЕЛОЕ;
      исх_строка : мСтр.тСтрока;

ПРОЦЕДУРА ЕслиБесконеч*(x_: ДЛИНВЕЩ): БУЛЕВО;
      ПЕРЕМ
            верх, низ: SET;
      НАЧАЛО
            mSys.GET(mSys.ADR(x_), низ);
            mSys.GET(mSys.ADR(x_) + 4, верх);
            ВЕРНУТЬ (верх * {20..30} = {20..30}) & (верх * {0..19} = {}) & (низ * {0..31} = {})
      КОНЕЦ ЕслиБесконеч;

ПРОЦЕДУРА Символ_Получ(адр_: ЦЕЛОЕ): СИМВ;
      ПЕРЕМ
         выход: СИМВ;
      НАЧАЛО
         mSys.GET(адр_, выход)
         ВЕРНУТЬ выход
      КОНЕЦ Символ_Получ;

ПРОЦЕДУРА Параметры_Проверить(счётчик: ЦЕЛОЕ);
      ПЕРЕМ
            симв: СИМВ;
            маркер, парам_число: ЦЕЛОЕ;

      ПРОЦЕДУРА Условия_Изменить(A, B, C: ЦЕЛОЕ);
            НАЧАЛО
                  маркер := C;
                  ВЫБОР симв ИЗ
                        |0X: маркер := 6
                        |1X..20X: маркер := A
                        |22X: маркер := B
                  ИНАЧЕ
                  КОНЕЦ
            КОНЕЦ Условия_Изменить;

      НАЧАЛО
            парам_число := мАпи.GetCommandLine();
            маркер := 0;
            ПОКА (счётчик < мКонст.макс_парам) & (маркер # 6) ДЕЛАТЬ
                  симв := Символ_Получ(парам_число);
                  ВЫБОР маркер ИЗ
                        |0: Условия_Изменить(0, 4, 1);
                              ЕСЛИ маркер = 1 ТОГДА
                                    масПараметры[счётчик, 0] := парам_число
                              КОНЕЦ
                        |4: Условия_Изменить(5, 0, 5);
                              ЕСЛИ маркер = 5 ТОГДА
                                    масПараметры[счётчик, 0] := парам_число
                              КОНЕЦ
                        |1: Условия_Изменить(0, 3, 1);
                              ЕСЛИ маркер IN {0, 6} ТОГДА
                                    масПараметры[счётчик, 1] := парам_число - 1;
                                    ДОБ(счётчик)
                              КОНЕЦ
                        |3, 5: Условия_Изменить(маркер, 1, маркер);
                              ЕСЛИ маркер = 6 ТОГДА
                                    масПараметры[счётчик, 1] := парам_число - 1;
                                    ДОБ(счётчик)
                              КОНЕЦ
                  ИНАЧЕ
                  КОНЕЦ;
                  ДОБ(парам_число)
            КОНЕЦ;
            параметры_всего := счётчик - 1
      КОНЕЦ Параметры_Проверить;

ПРОЦЕДУРА СтрПарам*(ПЕР стр_: МАССИВ ИЗ СИМВ; парам_число_: ЦЕЛОЕ);
      ПЕРЕМ
            i, j, парам_размер: ЦЕЛОЕ;
            симв: СИМВ;
      НАЧАЛО
            j := 0;
            ЕСЛИ парам_число_ <= параметры_всего ТОГДА
                  парам_размер := LEN(стр_) - 1;
                  i := масПараметры[парам_число_, 0];
                  ПОКА (j < парам_размер) & (i <= масПараметры[парам_число_, 1]) ДЕЛАТЬ
                        симв := Символ_Получ(i);
                        ЕСЛИ симв # 22X ТОГДА
                              стр_[j] := симв;
                              ДОБ(j)
                        КОНЕЦ;
                        ДОБ(i)
                  КОНЕЦ
            КОНЕЦ;
            стр_[j] := 0X
      КОНЕЦ СтрПарам;

ПРОЦЕДУРА КодСтрока_Уст*(МодульНов_, СтрНов_: ЦЕЛОЕ);
      НАЧАЛО
            модуль_ном := МодульНов_;
            строка_ном := СтрНов_
      КОНЕЦ КодСтрока_Уст;

ПРОЦЕДУРА Минимум*(a, b: ЦЕЛОЕ): ЦЕЛОЕ;
      ПЕРЕМ
            выход: ЦЕЛОЕ;
      НАЧАЛО
            ЕСЛИ a < b ТОГДА
                  выход := a
            ИНАЧЕ
                  выход := b
            КОНЕЦ
            ВЕРНУТЬ выход
      КОНЕЦ Минимум;

ПРОЦЕДУРА streq*(a, b: МАССИВ ИЗ СИМВ): БУЛЕВО;
      ПЕРЕМ
            i: ЦЕЛОЕ;
      НАЧАЛО
            i := -1;
            ПОВТОРЯТЬ
                  ДОБ(i)
            ПОКАНЕ (мСтр.Заглав(a[i]) # мСтр.Заглав(b[i])) ИЛИ (a[i] = 0X) ИЛИ (b[i] = 0X)
            ВЕРНУТЬ a[i] = b[i]
      КОНЕЦ streq;

ПРОЦЕДУРА Параметры_Линукс;
      ПЕРЕМ
            указ_кмд, парам, итер, цСтр: ЦЕЛОЕ;
            симв: СИМВ;
      НАЧАЛО
            указ_кмд := мАпи.GetCommandLine();
            mSys.GET(указ_кмд, параметры_всего);
            mSys.GET(указ_кмд + 4, парам);
            ДЛЯ итер := 0 ДО параметры_всего - 1 ДЕЛАТЬ
                  mSys.GET(парам + итер * 4, цСтр);
                  масПараметры[итер, 0] := цСтр;
                  ПОВТОРЯТЬ
                        mSys.GET(цСтр, симв);
                        ДОБ(цСтр)
                  ПОКАНЕ симв = 0X;
                  масПараметры[итер, 1] := цСтр - 1
            КОНЕЦ;
            ВЫЧ(параметры_всего)
      КОНЕЦ Параметры_Линукс;

ПРОЦЕДУРА Настроить; (* + *)

      ПРОЦЕДУРА СимвПослед_Получ(ПЕР адр: ЦЕЛОЕ);
            НАЧАЛО
                  ПОКА Символ_Получ(адр) # 0X ДЕЛАТЬ
                        ДОБ(адр)
                  КОНЕЦ;
                  ВЫЧ(адр)
            КОНЕЦ СимвПослед_Получ;

    НАЧАЛО
        ЕСЛИ мКонст.win ТОГДА
            мКонс.Вывод_Открыть;
            Параметры_Проверить(0)
        АЕСЛИ мКонст.kol ТОГДА
            Параметры_Проверить(1);
            масПараметры[0, 0] := мАпи.GetName();
            масПараметры[0, 1] := масПараметры[0, 0];
            СимвПослед_Получ(масПараметры[0, 1])
        АЕСЛИ мКонст.lin ТОГДА
            мКонс.Вывод_Открыть;
            Параметры_Линукс
        КОНЕЦ
    КОНЕЦ Настроить;

НАЧАЛО (* + *)
      Настроить
КОНЕЦ модУтиль.
