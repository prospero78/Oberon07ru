(*
   #‘» — 000. пример задачи
   Copyright 2013 Krotov Anton

   This file is part of Compiler.

   Compiler is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   Compiler is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with Compiler. If not, see <http://www.gnu.org/licenses/>.
   *)
ћќƒ”Ћ№ Compiler;

»ћѕќ–“ мƒецл := модƒецл,
   м—кан := мод—канер,
   м”тиль := мод”тиль,
   X86 := модјсм86_32,
   mSys := SYSTEM,
   м«вено := мод«вено,
   м“ип := мод“ип,
   м онст := мод онстанты,
   м онс := мод онсоль,
   мќш := модќшибки,
   мќш онст := модќшибки онст,
   мѕроц := модѕроцесс,
   м—тр := мод—троки,
   м÷епь := мод÷епь,
   мѕров := модѕроверка,
   м”зел := мод«вено—ущ,
   м¬ин онс := мод¬ин онсоль,
   м—тек := мод—тек,
   мќ— := модќ—,
   м‘айл := мод‘айл,
   мѕам := модѕам€ть;

 ќЌ—“

   lxDbl = 68;

   eCONST = 2; eEXP = 3; ePROC = 4; eSTPROC = 5; eSYSPROC = 6;

   IDMOD = 1; IDCONST = 2; IDTYPE = 3; IDVAR = 4; IDPROC = 5; IDSTPROC = 6; IDGUARD = 7; IDPARAM = 8; IDSYSPROC = 9;

“»ѕџ

   тћетка = ” ј«ј“≈Ћ№ Ќј «јѕ»—№ (м«вено.т«вено)
         a, b: ÷≈Ћќ≈
       ќЌ≈÷;

ѕ≈–≈ћ
   п¬ыраж, pFactor: ѕ–ќ÷≈ƒ”–ј (ѕ≈– e: мƒецл.т¬ыражение);
   pOpSeq: ѕ–ќ÷≈ƒ”–ј;
   стр—ущн: м—тр.т—трока;
   sttypes: мƒецл.ту“ипЌабор;

ѕ–ќ÷≈ƒ”–ј —ущность—лед_ѕроверить(ц“ип_:÷≈Ћќ≈);
   Ќј„јЋќ
      мƒецл.—ущн—лед_ѕолуч;
      мƒецл.—ущность_ѕроверить(ц“ип_);
    ќЌ≈÷ —ущность—лед_ѕроверить;

ѕ–ќ÷≈ƒ”–ј —ущн—лед оорд_”ст(у оорд_: мќш.ту оорд);
   Ќј„јЋќ
      мƒецл.—ущн—лед_ѕолуч;
      мќш. оорд_”ст(у оорд_);
    ќЌ≈÷ —ущн—лед оорд_”ст;

ѕ–ќ÷≈ƒ”–ј ¬ыраж_«агрузить(выраж_: мƒецл.т¬ыражение);
   Ќј„јЋќ
      ≈—Ћ» выраж_.ц“ип = м онст.eVAR “ќ√ƒј
         X86.Load(выраж_.у“ип.цћаркер)
       ќЌ≈÷
    ќЌ≈÷ ¬ыраж_«агрузить;

ѕ–ќ÷≈ƒ”–ј —тр_ƒлина(адр_: ƒЋ»Ќ¬≈ў): ÷≈Ћќ≈;
   ѕ≈–≈ћ
      стр: м—тр.ту—трока;
   Ќј„јЋќ
      стр := м—тр.у—трока_—оздать(адр_)
      ¬≈–Ќ”“№ стр.длина
    ќЌ≈÷ —тр_ƒлина;

ѕ–ќ÷≈ƒ”–ј ”казатель(ѕ≈– выраж_: мƒецл.т¬ыражение);
   ѕ≈–≈ћ
      id: мƒецл.ту—ущность;
      у”зел: м”зел.ту«вено—ущ;
      выражение: мƒецл.т¬ыражение;
      i, n, bases, glob, loc, idx: ÷≈Ћќ≈;
      imp, бќстанов, бќхрана: Ѕ”Ћ≈¬ќ;
      уѕоле: мƒецл.туѕоле;
      у“ип, BaseT: м“ип.ту“ип;
      у—тр: м—тр.ту—трока;
      у оорд: мќш.ту оорд;

   ѕ–ќ÷≈ƒ”–ј LoadVar;
      Ќј„јЋќ
         ≈—Ћ» glob # -1 “ќ√ƒј
            X86.GlobalAdr(glob);
            glob := -1
         ј≈—Ћ» loc # -1 “ќ√ƒј
            X86.LocalAdr(loc, bases);
            loc := -1
          ќЌ≈÷
       ќЌ≈÷ LoadVar;

   Ќј„јЋќ
      Ќќ¬(у оорд);
      glob := -1;
      loc := -1;
      мќш. оорд_”ст(у оорд);
      мƒецл.—ущность_ѕроверить(м онст.сущ»ћя);
      у”зел := м—кан.у—ущность;
      id := мƒецл.GetIdent(у”зел);
      ≈—Ћ» (id # ѕ”—“ќ) & (id.iType = IDMOD) “ќ√ƒј
         —ущность—лед_ѕроверить(м онст.оп“очка);
         —ущность—лед_ѕроверить(м онст.сущ»ћя);
         мќш. оорд_”ст(у оорд);
         у”зел := м—кан.у—ущность;
         imp := id.модуль # мƒецл.модуль;
         id := мƒецл.GetQIdent(id.модуль, у”зел)
       ќЌ≈÷;
      мѕров.“ест(id # ѕ”—“ќ, у оорд, 42);
      выраж_.vparam := Ћќ∆№;
      выраж_.deref := Ћќ∆№;
      выраж_.у—ущ := id;
      мƒецл.—ущн—лед_ѕолуч;
      ¬џЅќ– id.iType »«
         |IDVAR:
            выраж_.ц“ип := м онст.eVAR;
            выраж_.у“ип := id.у“ип;
            ≈—Ћ» id.VarKind = 0 “ќ√ƒј
               выраж_.б„тение := imp
            »Ќј„≈
               выраж_.б„тение := (id.VarKind = мƒецл.param) & (id.у“ип.цћаркер ¬ {м онст.тип«јѕ»—№, м онст.типћј——»¬});
               выраж_.vparam := id.VarKind = мƒецл.paramvar
             ќЌ≈÷;
            bases := мƒецл.модуль.ц”ровень - id.Level;
            ≈—Ћ» id.Level = 3 “ќ√ƒј
               glob := id.Offset
            ј≈—Ћ» (id.VarKind = 0) »Ћ» (id.VarKind = мƒецл.param) & ~(id.у“ип.цћаркер ¬ {м онст.типћј——»¬, м онст.тип«јѕ»—№}) “ќ√ƒј
               loc := id.Offset
            ј≈—Ћ» (id.VarKind = мƒецл.paramvar) »Ћ» (id.у“ип.цћаркер ¬ {м онст.типћј——»¬, м онст.тип«јѕ»—№}) “ќ√ƒј
               ≈—Ћ» мƒецл.Dim(выраж_.у“ип) > 0 “ќ√ƒј
                  n := мƒецл.Dim(выраж_.у“ип);
                  ƒЋя i := n ƒќ 1 ѕќ -1 ƒ≈Ћј“№
                     X86.LocalAdr(id.Offset + i * 4, bases);
                     X86.Load(м онст.тип÷≈Ћќ≈)
                   ќЌ≈÷
                ќЌ≈÷;
               X86.LocalAdr(id.Offset, bases);
               X86.Load(м онст.тип÷≈Ћќ≈)
             ќЌ≈÷
         |IDCONST:
            мѕров.“ест(id.у“ип # ѕ”—“ќ, у оорд, 75);
            выраж_.ц“ип := eCONST;
            выраж_.у“ип := id.у“ип;
            выраж_.дв«начение := id.Value;
            ≈—Ћ» id.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.типЌјЅќ–, м онст.типЅ”Ћ≈¬ќ} “ќ√ƒј
                X86.PushConst( ÷≈Ћ(выраж_.дв«начение))
            ј≈—Ћ» id.у“ип.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў} “ќ√ƒј
                X86.PushFlt(выраж_.дв«начение)
            ј≈—Ћ» id.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
                у—тр := м—тр.у—трока_—оздать(выраж_.дв«начение);
                ≈—Ћ» у—тр.длина = 1 “ќ√ƒј
                    X86.PushConst(ЌЋ»“(у—тр.стр[0]))
                »Ќј„≈
                    X86.PushInt(у—тр.номер)
                 ќЌ≈÷
             ќЌ≈÷
         |IDPROC:
            выраж_.ц“ип := ePROC;
            выраж_.у“ип := sttypes[м онст.TVOID]
         |IDTYPE:
            мѕров.“ест(Ћќ∆№, у оорд, 101)
         |IDSTPROC:
            выраж_.ц“ип := eSTPROC;
            выраж_.у“ип := sttypes[м онст.TVOID]
         |IDSYSPROC:
            выраж_.ц“ип := eSYSPROC;
            выраж_.у“ип := sttypes[м онст.TVOID]
      »Ќј„≈
       ќЌ≈÷;
      бќстанов := Ћќ∆№;
      бќхрана := Ћќ∆№;
      ѕќ¬“ќ–я“№
         ¬џЅќ– м—кан.ц—ущность »«
            |м онст.оп“очка:
               выраж_.deref := Ћќ∆№;
               мѕров.“ест2(выраж_.у“ип.цћаркер ¬ {м онст.тип” ј«ј“≈Ћ№, м онст.тип«јѕ»—№}, 105);
               ≈—Ћ» выраж_.у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№ “ќ√ƒј
                  выраж_.б„тение := Ћќ∆№;
                  LoadVar;
                  выраж_.у“ип := выраж_.у“ип.уѕредок;
                  X86.Load(м онст.тип÷≈Ћќ≈);
                  ≈—Ћ» ~бќхрана “ќ√ƒј
                     X86.CheckNIL
                   ќЌ≈÷
                ќЌ≈÷;
               —ущность—лед_ѕроверить(м онст.сущ»ћя);
               мќш. оорд_”ст(у оорд);
               у”зел := м—кан.у—ущность;
               у“ип := выраж_.у“ип;
               ѕќ¬“ќ–я“№
                  уѕоле := мƒецл.GetField(у“ип, у”зел);
                  у“ип := у“ип.уѕредок
               ѕќ јЌ≈ (уѕоле # ѕ”—“ќ) »Ћ» (у“ип = ѕ”—“ќ);
               мѕров.“ест(уѕоле # ѕ”—“ќ, у оорд, 99);
               ≈—Ћ» уѕоле.Unit # мƒецл.модуль “ќ√ƒј
                  мѕров.“ест(уѕоле.Export, у оорд, 99)
                ќЌ≈÷;
               ≈—Ћ» glob # -1 “ќ√ƒј
                  glob := glob + уѕоле.Offset
               ј≈—Ћ» loc # -1 “ќ√ƒј
                  loc := loc + уѕоле.Offset
               »Ќј„≈
                  X86.Field(уѕоле.Offset)
                ќЌ≈÷;
               выраж_.у“ип := уѕоле.у“ип;
               выраж_.vparam := Ћќ∆№;
               бќхрана := Ћќ∆№;
               мƒецл.—ущн—лед_ѕолуч
            |м онст.оп—кобкаЋев в:
               LoadVar;
               ѕќ¬“ќ–я“№
                  мѕров.“ест2(выраж_.у“ип.цћаркер = м онст.типћј——»¬, 102);
                  —ущн—лед оорд_”ст(у оорд);
                  п¬ыраж(выражение);
                  мѕров.“ест(выражение.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
                  ¬ыраж_«агрузить(выражение);
                  ≈—Ћ» выраж_.у“ип.длина = 0 “ќ√ƒј
                     BaseT := мƒецл.OpenBase(выраж_.у“ип);
                     X86.PushConst(BaseT.размер);
                     X86.OpenIdx(мƒецл.Dim(выраж_.у“ип))
                  »Ќј„≈
                     ≈—Ћ» выражение.ц“ип = eCONST “ќ√ƒј
                        idx :=  ÷≈Ћ(выражение.дв«начение);
                        мѕров.“ест((idx >= 0) & (idx < выраж_.у“ип.длина), у оорд, 159);
                        ≈—Ћ» выраж_.у“ип.уѕредок.размер # 1 “ќ√ƒј
                           X86.Drop;
                           X86.PushConst(выраж_.у“ип.уѕредок.размер * idx)
                         ќЌ≈÷;
                        X86.Idx
                     »Ќј„≈
                        X86.FixIdx(выраж_.у“ип.длина, выраж_.у“ип.уѕредок.размер)
                      ќЌ≈÷
                   ќЌ≈÷;
                  выраж_.у“ип := выраж_.у“ип.уѕредок
               ѕќ јЌ≈ м—кан.ц—ущность # м онст.оп«ап€та€;
               мƒецл.—ущность_ѕроверить(м онст.оп—кобкаѕр в);
               выраж_.vparam := Ћќ∆№;
               бќхрана := Ћќ∆№;
               мƒецл.—ущн—лед_ѕолуч
            |м онст.оп—тепень:
               LoadVar;
               мѕров.“ест2(выраж_.у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№, 104);
               выраж_.б„тение := Ћќ∆№;
               X86.Load(м онст.тип÷≈Ћќ≈);
               ≈—Ћ» ~бќхрана “ќ√ƒј
                  X86.CheckNIL
                ќЌ≈÷;
               выраж_.у“ип := выраж_.у“ип.уѕредок;
               выраж_.vparam := Ћќ∆№;
               выраж_.deref := »—“»Ќј;
               бќхрана := Ћќ∆№;
               мƒецл.—ущн—лед_ѕолуч
            |м онст.оп—кобкаЋев ругл:
               LoadVar;
               ≈—Ћ» выраж_.у“ип.цћаркер ¬ {м онст.тип«јѕ»—№, м онст.тип” ј«ј“≈Ћ№} “ќ√ƒј
                  ≈—Ћ» выраж_.у“ип.цћаркер = м онст.тип«јѕ»—№ “ќ√ƒј
                     мѕров.“ест2(выраж_.vparam, 108)
                   ќЌ≈÷;
                  —ущность—лед_ѕроверить(м онст.сущ»ћя);
                  мќш. оорд_”ст(у оорд);
                  у“ип := мƒецл.IdType(у оорд);
                  мѕров.“ест(у“ип # ѕ”—“ќ, у оорд, 42);
                  ≈—Ћ» выраж_.у“ип.цћаркер = м онст.тип«јѕ»—№ “ќ√ƒј
                     мѕров.“ест(у“ип.цћаркер = м онст.тип«јѕ»—№, у оорд, 106)
                  »Ќј„≈
                     мѕров.“ест(у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№, у оорд, 107)
                   ќЌ≈÷;
                  мѕров.“ест(м“ип.ѕредок_—равнить(выраж_.у“ип, у“ип), у оорд, 108);
                  выраж_.у“ип := у“ип;
                  мƒецл.—ущность_ѕроверить(м онст.оп—кобкаѕр р);
                  мƒецл.—ущн—лед_ѕолуч;
                  ≈—Ћ» выраж_.у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№ “ќ√ƒј
                     ≈—Ћ» (м—кан.ц—ущность = м онст.оп“очка) »Ћ» (м—кан.ц—ущность = м онст.оп—тепень) “ќ√ƒј
                        X86.DupLoadCheck
                     »Ќј„≈
                        X86.DupLoad
                      ќЌ≈÷;
                     бќхрана := »—“»Ќј;
                     у“ип := у“ип.уѕредок
                  »Ќј„≈
                     X86.LocalAdr(выраж_.у—ущ.Offset, мƒецл.модуль.ц”ровень - выраж_.у—ущ.Level)
                   ќЌ≈÷;
                  X86.Guard(у“ип.номер, Ћќ∆№)
               »Ќј„≈
                  бќстанов := »—“»Ќј
                ќЌ≈÷
         »Ќј„≈
            бќстанов := »—“»Ќј
          ќЌ≈÷
      ѕќ јЌ≈ бќстанов;
      LoadVar
    ќЌ≈÷ ”казатель;

ѕ–ќ÷≈ƒ”–ј Ќабор(ѕ≈– e: мƒецл.т¬ыражение);
   ѕ≈–≈ћ
      a, b: мƒецл.т¬ыражение;
      у оорд: мќш.ту оорд;
      s: SET; flag: Ѕ”Ћ≈¬ќ;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      мƒецл.—ущн—лед_ѕолуч;
      e.ц“ип := eEXP;
      e.у“ип := sttypes[м онст.типЌјЅќ–];
      e.дв«начение := 0.0D0;
      e.vparam := Ћќ∆№;
      s := {};
      flag := »—“»Ќј;
      X86.PushConst(0);
      ѕќ ј м—кан.ц—ущность # м онст.оп—кобкаѕр‘иг ƒ≈Ћј“№
         мќш. оорд_”ст(у оорд);
         п¬ыраж(a);
         мѕров.“ест(a.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
         ≈—Ћ» a.ц“ип = eCONST “ќ√ƒј
            мѕров.“ест(«—ѕ( ÷≈Ћ(a.дв«начение), 5) = 0, у оорд, 53)
          ќЌ≈÷;
         ¬ыраж_«агрузить(a);
         b := a;
         ≈—Ћ» м—кан.ц—ущность = lxDbl “ќ√ƒј
            —ущн—лед оорд_”ст(у оорд);
            п¬ыраж(b);
            мѕров.“ест(b.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ≈—Ћ» b.ц“ип = eCONST “ќ√ƒј
               мѕров.“ест(«—ѕ( ÷≈Ћ(b.дв«начение), 5) = 0, у оорд, 53);
               мѕров.“ест(a.дв«начение <= b.дв«начение, у оорд, 54)
             ќЌ≈÷;
            ¬ыраж_«агрузить(b)
         »Ќј„≈
            X86.Dup
          ќЌ≈÷;
         X86.rset;
         X86.Set(м онст.опѕлюс);
         flag := (a.ц“ип = eCONST) & (b.ц“ип = eCONST) & flag;
         ≈—Ћ» flag “ќ√ƒј
            s := s + { ÷≈Ћ(a.дв«начение) ..  ÷≈Ћ(b.дв«начение)}
          ќЌ≈÷;
         ≈—Ћ» м—кан.ц—ущность = м онст.оп«ап€та€ “ќ√ƒј
            мƒецл.—ущн—лед_ѕолуч;
            мѕров.“ест2(м—кан.ц—ущность # м онст.оп—кобкаѕр‘иг, 36)
         »Ќј„≈
            мƒецл.—ущность_ѕроверить(м онст.оп—кобкаѕр‘иг)
          ќЌ≈÷
       ќЌ≈÷;
      ≈—Ћ» flag “ќ√ƒј
         e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(ЌЋ»“(s)));
         e.ц“ип := eCONST
       ќЌ≈÷;
      мƒецл.—ущн—лед_ѕолуч
    ќЌ≈÷ Ќабор;

ѕ–ќ÷≈ƒ”–ј ≈сли—трока(a: мƒецл.т¬ыражение): Ѕ”Ћ≈¬ќ;
      ¬≈–Ќ”“№ (a.у“ип.цћаркер = м онст.тип—“–ќ ј) »Ћ» (a.у“ип.цћаркер = м онст.типћј——»¬) & (a.у“ип.уѕредок.цћаркер = м онст.типЋ»“≈–ј)
    ќЌ≈÷ ≈сли—трока;

ѕ–ќ÷≈ƒ”–ј —трока(e: мƒецл.т¬ыражение);
   ѕ≈–≈ћ
      A: X86.TIDX;
   Ќј„јЋќ
      ≈—Ћ» (e.у“ип.цћаркер = м онст.типћј——»¬) & (e.у“ип.уѕредок.цћаркер = м онст.типЋ»“≈–ј) & (e.у“ип.длина # 0) “ќ√ƒј
         A[0] := e.у“ип.длина;
         X86.OpenArray(A, 1)
      ј≈—Ћ» e.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
         A[0] := —тр_ƒлина(e.дв«начение) + 1;
         ≈—Ћ» A[0] # 2 “ќ√ƒј
            X86.OpenArray(A, 1)
          ќЌ≈÷
       ќЌ≈÷
    ќЌ≈÷ —трока;

ѕ–ќ÷≈ƒ”–ј StFunc(ѕ≈– e: мƒецл.т¬ыражение; func: ÷≈Ћќ≈);
   ѕ≈–≈ћ
      a, b, p: ÷≈Ћќ≈;
      e1, e2: мƒецл.т¬ыражение;
      T: м“ип.ту“ип;
      str, str2: м—тр.ту—трока;
      у оорд, у оорд2: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      Ќќ¬(у оорд2);
      e.vparam := Ћќ∆№;
      e.ц“ип := eEXP;
      мќш. оорд_”ст(у оорд2);
      мƒецл.—ущность_ѕроверить(м онст.оп—кобкаЋев ругл);
      —ущн—лед оорд_”ст(у оорд);
      ¬џЅќ– func »«
         |м онст.процјЅ—:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў}, у оорд, 57);
            ¬ыраж_«агрузить(e1);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               e.дв«начение := ABS(e1.дв«начение);
               e.ц“ип := eCONST;
               мѕров.“ест(~((e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈) & (e1.дв«начение = ”ƒЋ»Ќ( ¬≈ў(м онст.целое_мин)))), у оорд, мƒецл.IOVER)
             ќЌ≈÷;
            ≈—Ћ» e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈ “ќ√ƒј
               X86.StFunc(м онст.процјЅ—)
            »Ќј„≈
               X86.StFunc(м онст.процјЅ—¬)
             ќЌ≈÷;
            e.у“ип := e1.у“ип
         |м онст.проц„®“:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(ЌЋ»“(„®“( ÷≈Ћ(e1.дв«начение)))));
               e.ц“ип := eCONST
             ќЌ≈÷;
            X86.StFunc(м онст.проц„®“);
            e.у“ип := sttypes[м онст.типЅ”Ћ≈¬ќ]
         |м онст.процƒЋ»Ќ:
            ”казатель(e1);
            мѕров.“ест((e1.ц“ип = м онст.eVAR) & (e1.у“ип.цћаркер = м онст.типћј——»¬), у оорд, 102);
            ≈—Ћ» e1.у“ип.длина > 0 “ќ√ƒј
               X86.Len(-e1.у“ип.длина)
            »Ќј„≈
               X86.Len(мƒецл.Dim(e1.у“ип))
             ќЌ≈÷;
            e.у“ип := sttypes[м онст.тип÷≈Ћќ≈]
         |м онст.процЋ—Ћ, м онст.проц«—ѕ, м онст.проц÷—ѕ, м онст.процЋ—ѕ:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            —ущн—лед оорд_”ст(у оорд);
            п¬ыраж(e2);
            мѕров.“ест(e2.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e2);
            ≈—Ћ» (e1.ц“ип = eCONST) & (e2.ц“ип = eCONST) “ќ√ƒј
               a :=  ÷≈Ћ(e1.дв«начение);
               b :=  ÷≈Ћ(e2.дв«начение);
               ¬џЅќ– func »«
                  |м онст.процЋ—Ћ: a := Ћ—Ћ(a, b)
                  |м онст.проц«—ѕ: a := «—ѕ(a, b)
                  |м онст.проц÷—ѕ: a := ÷—ѕ(a, b)
                  |м онст.процЋ—ѕ: a := Ћ—ѕ(a, b)
               »Ќј„≈
                ќЌ≈÷;
               e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(a));
               e.ц“ип := eCONST
             ќЌ≈÷;
            ¬џЅќ– func »«
               |м онст.процЋ—Ћ: X86.StFunc(м онст.процЋ—Ћ)
               |м онст.проц«—ѕ: X86.StFunc(м онст.проц«—ѕ)
               |м онст.проц÷—ѕ: X86.StFunc(м онст.проц÷—ѕ)
               |м онст.процЋ—ѕ: X86.StFunc(м онст.процЋ—ѕ)
            »Ќј„≈
             ќЌ≈÷;
            e.у“ип := sttypes[м онст.тип÷≈Ћќ≈]
         |м онст.проц ÷≈Ћ:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў}, у оорд, 66);
            ¬ыраж_«агрузить(e1);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               мѕров.“ест((e1.дв«начение - 1.0D0 < ”ƒЋ»Ќ( ¬≈ў(м онст.целое_макс))) & (e1.дв«начение >= ”ƒЋ»Ќ( ¬≈ў(м онст.целое_мин))), у оорд, 74);
               e.дв«начение := ”ƒЋ»Ќ( ¬≈ў( ÷≈Ћ(e1.дв«начение)));
               e.ц“ип := eCONST
             ќЌ≈÷;
            X86.StFunc(м онст.проц ÷≈Ћ);
            e.у“ип := sttypes[м онст.тип÷≈Ћќ≈]
         |м онст.проц ¬≈ў:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               e.дв«начение := e1.дв«начение;
               e.ц“ип := eCONST
             ќЌ≈÷;
            X86.StFunc(м онст.проц ¬≈ў);
            e.у“ип := sttypes[м онст.тип¬≈ў]
         |м онст.процЌЋ»“:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер ¬ {м онст.типЋ»“≈–ј, м онст.типЅ”Ћ≈¬ќ, м онст.типЌјЅќ–, м онст.тип—“–ќ ј}, у оорд, 68);
            ≈—Ћ» e1.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
               мѕров.“ест(—тр_ƒлина(e1.дв«начение) = 1, у оорд, 94)
             ќЌ≈÷;
            ¬ыраж_«агрузить(e1);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               ≈—Ћ» e1.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
                  str := м—тр.у—трока_—оздать(e1.дв«начение);
                  e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(ЌЋ»“(str.стр[0])))
               »Ќј„≈
                  e.дв«начение := e1.дв«начение
                ќЌ≈÷;
               e.ц“ип := eCONST
             ќЌ≈÷;
            ≈—Ћ» e1.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ “ќ√ƒј
               X86.StFunc(м онст.процЌЋ»“)
             ќЌ≈÷;
            e.у“ип := sttypes[м онст.тип÷≈Ћќ≈]
         |м онст.процЅ»“:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               e.дв«начение := e1.дв«начение;
               e.ц“ип := eCONST
             ќЌ≈÷;
            e.у“ип := sttypes[м онст.типЌјЅќ–]
         |м онст.проц¬Ћ»“:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            e.у“ип := sttypes[м онст.типЋ»“≈–ј];
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               мѕров.“ест(«—ѕ( ÷≈Ћ(e1.дв«начение), 8) = 0, у оорд, 76);
               str2 := мƒецл.—трћоно_—оздать(¬Ћ»“( ÷≈Ћ(e1.дв«начение)));
               mSys.GET(mSys.ADR(str2), p);
               e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(p));
               e.у“ип := sttypes[м онст.тип—“–ќ ј];
               e.ц“ип := eCONST
             ќЌ≈÷
         |м онст.проц”ƒЋ»Ќ:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип¬≈ў, у оорд, 71);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               e.дв«начение := e1.дв«начение;
               e.ц“ип := eCONST
             ќЌ≈÷;
            ¬ыраж_«агрузить(e1);
            e.у“ип := sttypes[м онст.типƒЋ»Ќ¬≈ў]
         |м онст.проц” ќ–ќ“:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.типƒЋ»Ќ¬≈ў, у оорд, 70);
            ≈—Ћ» e1.ц“ип = eCONST “ќ√ƒј
               мѕров.“ест(ABS(e1.дв«начение) <= ”ƒЋ»Ќ(м онст.вещ_макс), у оорд, мƒецл.FOVER);
               мѕров.“ест(ABS(e1.дв«начение) >= ”ƒЋ»Ќ(м онст.вещ_мин), у оорд, мƒецл.UNDER);
               e.дв«начение := e1.дв«начение;
               e.ц“ип := eCONST
             ќЌ≈÷;
            ¬ыраж_«агрузить(e1);
            e.у“ип := sttypes[м онст.тип¬≈ў]
         |м онст.процƒЋ»Ќ—“–:
            п¬ыраж(e1);
            мѕров.“ест(≈сли—трока(e1), у оорд, 141);
            ≈—Ћ» e1.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
               str := м—тр.у—трока_—оздать(e1.дв«начение);
               ≈—Ћ» str.длина = 1 “ќ√ƒј
                  X86.Mono(str.номер);
                  X86.StrMono
                ќЌ≈÷;
               e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(ƒЋ»Ќ—“–(str.стр)));
               e.ц“ип := eCONST
             ќЌ≈÷;
            —трока(e1);
            e.у“ип := sttypes[м онст.тип÷≈Ћќ≈];
            X86.StFunc(м онст.процƒЋ»Ќ—“–)
         |м онст.sysADR:
            мѕров.“ест((м—кан.ц—ущность = м онст.сущ»ћя) »Ћ» (м—кан.ц—ущность = м онст.сущ—“–ќ ј) »Ћ» (м—кан.ц—ущность = м онст.lxCHX), у оорд, 43);
            ≈—Ћ» м—кан.ц—ущность = м онст.сущ»ћя “ќ√ƒј
               ”казатель(e1);
               мѕров.“ест((e1.ц“ип = м онст.eVAR) »Ћ» (e1.ц“ип = ePROC) »Ћ» (e1.у“ип = sttypes[м онст.тип—“–ќ ј]), у оорд, 43);
               ≈—Ћ» e1.ц“ип = ePROC “ќ√ƒј
                  X86.PushInt(e1.у—ущ.Number)
                ќЌ≈÷
            »Ќј„≈
               pFactor(e1)
             ќЌ≈÷;
            ≈—Ћ» e1.у“ип = sttypes[м онст.тип—“–ќ ј] “ќ√ƒј
               str := м—тр.у—трока_—оздать(e1.дв«начение);
               ≈—Ћ» str.длина = 1 “ќ√ƒј
                  X86.Drop;
                  X86.PushInt(str.номер)
                ќЌ≈÷
             ќЌ≈÷;
            e.у“ип := sttypes[м онст.тип÷≈Ћќ≈];
            X86.ADR(мƒецл.Dim(e1.у“ип))
         |м онст.sysBIT:
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            —ущн—лед оорд_”ст(у оорд);
            п¬ыраж(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            X86.StFunc(м онст.sysBIT);
            e.у“ип := sttypes[м онст.типЅ”Ћ≈¬ќ]
         |м онст.sysSIZE, м онст.sysTYPEID:
            мƒецл.ѕроцедур–азм_”ст;
            мƒецл.—ущность_ѕроверить(м онст.сущ»ћя);
            T := мƒецл.IdType(у оорд);
            мѕров.“ест(T # ѕ”—“ќ, у оорд, 42);
            e.ц“ип := eCONST;
            e.у“ип := sttypes[м онст.тип÷≈Ћќ≈];
            ≈—Ћ» func = м онст.sysTYPEID “ќ√ƒј
               мѕров.“ест(T.цћаркер ¬ {м онст.тип«јѕ»—№, м онст.тип” ј«ј“≈Ћ№}, у оорд, 47);
               ≈—Ћ» T.цћаркер = м онст.тип” ј«ј“≈Ћ№ “ќ√ƒј
                  T := T.уѕредок
                ќЌ≈÷;
               e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(T.номер));
               X86.PushConst(T.номер)
            »Ќј„≈
               e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(T.размер));
               X86.PushConst(T.размер)
             ќЌ≈÷
      »Ќј„≈
         мѕров.“ест(Ћќ∆№, у оорд2, 73)
       ќЌ≈÷;
      мƒецл.—ущность_ѕроверить(м онст.оп—кобкаѕр р);
      мƒецл.—ущн—лед_ѕолуч
    ќЌ≈÷ StFunc;

ѕ–ќ÷≈ƒ”–ј ProcTypeComp(T1, T2: м“ип.ту“ип): Ѕ”Ћ≈¬ќ;
   ѕ≈–≈ћ
      sp: ÷≈Ћќ≈;
      stk: ћј——»¬ 100, 2 »« м“ип.ту“ип;

   ѕ–ќ÷≈ƒ”–ј ProcTypeComp1(T1, T2: м“ип.ту“ип): Ѕ”Ћ≈¬ќ;
      ѕ≈–≈ћ
         fp, ft: мƒецл.туѕоле;
         Res: Ѕ”Ћ≈¬ќ;

      ѕ–ќ÷≈ƒ”–ј TypeComp(T1, T2: м“ип.ту“ип): Ѕ”Ћ≈¬ќ;
         ѕ≈–≈ћ
            Res: Ѕ”Ћ≈¬ќ;
         Ќј„јЋќ
            ≈—Ћ» (T1.цћаркер = м онст.типћј——»¬) & (T2.цћаркер = м онст.типћј——»¬) & (T1.длина = 0) & (T2.длина = 0) “ќ√ƒј
               Res := TypeComp(T1.уѕредок, T2.уѕредок)
            »Ќј„≈
              Res := ProcTypeComp1(T1, T2)
             ќЌ≈÷
            ¬≈–Ќ”“№ Res
          ќЌ≈÷ TypeComp;

      ѕ–ќ÷≈ƒ”–ј Check(): Ѕ”Ћ≈¬ќ;
         ѕ≈–≈ћ
            i: ÷≈Ћќ≈;
            res: Ѕ”Ћ≈¬ќ;
         Ќј„јЋќ
            i := 0;
            res := Ћќ∆№;
            ѕќ ј (i < sp) & ~res ƒ≈Ћј“№
               res := ((stk[i][0] = T1) & (stk[i][1] = T2)) »Ћ» ((stk[i][0] = T2) & (stk[i][1] = T1));
               ƒќЅ(i)
             ќЌ≈÷
            ¬≈–Ќ”“№ res
          ќЌ≈÷ Check;

        Ќј„јЋќ
          ƒќЅ(sp);
          stk[sp][0] := T1;
          stk[sp][1] := T2;
          ≈—Ћ» Check() “ќ√ƒј
            Res := »—“»Ќј
          »Ќј„≈
            ≈—Ћ» (T1.цћаркер = м онст.типѕ–ќ÷≈ƒ”–ј) & (T2.цћаркер = м онст.типѕ–ќ÷≈ƒ”–ј) & (T1 # T2) “ќ√ƒј
              Res := (T1.вызов = T2.вызов) & (T1.пол€.счЄтчик = T2.пол€.счЄтчик) & ProcTypeComp1(T1.уѕредок, T2.уѕредок);
              fp := T1.пол€.предыдущ(мƒецл.туѕоле);
              ft := T2.пол€.предыдущ(мƒецл.туѕоле);
              ѕќ ј Res & (fp # ѕ”—“ќ) ƒ≈Ћј“№
                Res := (fp.ByRef = ft.ByRef) & TypeComp(fp.у“ип, ft.у“ип);
                fp := fp.следующ(мƒецл.туѕоле);
                ft := ft.следующ(мƒецл.туѕоле)
               ќЌ≈÷
            »Ќј„≈
              Res := T1 = T2
             ќЌ≈÷
           ќЌ≈÷;
          ¬џ„(sp)
          ¬≈–Ќ”“№ Res
         ќЌ≈÷ ProcTypeComp1;

   Ќј„јЋќ
      sp := -1
      ¬≈–Ќ”“№ ProcTypeComp1(T1, T2)
    ќЌ≈÷ ProcTypeComp;

ѕ–ќ÷≈ƒ”–ј ArrComp(Ta, Tf: м“ип.ту“ип): Ѕ”Ћ≈¬ќ;
   ѕ≈–≈ћ
      Res: Ѕ”Ћ≈¬ќ;
   Ќј„јЋќ
      ≈—Ћ» (Tf.цћаркер = м онст.типћј——»¬) & (Tf.длина = 0) & (Ta.цћаркер = м онст.типћј——»¬) “ќ√ƒј
        Res := ArrComp(Ta.уѕредок, Tf.уѕредок)
      »Ќј„≈
        Res := ProcTypeComp(Ta, Tf)
       ќЌ≈÷
      ¬≈–Ќ”“№ Res
    ќЌ≈÷ ArrComp;

ѕ–ќ÷≈ƒ”–ј AssComp(e: мƒецл.т¬ыражение; T: м“ип.ту“ип; param: Ѕ”Ћ≈¬ќ): Ѕ”Ћ≈¬ќ;
   ѕ≈–≈ћ
      Res: Ѕ”Ћ≈¬ќ;
   Ќј„јЋќ
      ¬џЅќ– T.цћаркер »«
         |м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў, м онст.типЌјЅќ–, м онст.типЅ”Ћ≈¬ќ, м онст.TCARD16:
            Res := e.у“ип = T
         |м онст.типЋ»“≈–ј:
            ≈—Ћ» e.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
               Res := —тр_ƒлина(e.дв«начение) = 1
            »Ќј„≈
               Res := e.у“ип.цћаркер = м онст.типЋ»“≈–ј
             ќЌ≈÷
         |м онст.типћј——»¬:
            ≈—Ћ» param “ќ√ƒј
               ≈—Ћ» T.длина = 0 “ќ√ƒј
                  ≈—Ћ» (T.уѕредок.цћаркер = м онст.типЋ»“≈–ј) & (e.у“ип.цћаркер = м онст.тип—“–ќ ј) “ќ√ƒј
                     Res := »—“»Ќј
                  »Ќј„≈
                     Res := ArrComp(e.у“ип, T)
                   ќЌ≈÷
               »Ќј„≈
                  ≈—Ћ» (T.уѕредок.цћаркер = м онст.типЋ»“≈–ј) & (e.у“ип.цћаркер = м онст.тип—“–ќ ј) “ќ√ƒј
                     Res := —тр_ƒлина(e.дв«начение) <= T.длина
                  »Ќј„≈
                     Res := e.у“ип = T
                   ќЌ≈÷
                ќЌ≈÷
               »Ќј„≈
               ≈—Ћ» T.длина = 0 “ќ√ƒј
                  Res := Ћќ∆№
               ј≈—Ћ» (T.уѕредок.цћаркер = м онст.типЋ»“≈–ј) & (e.у“ип.цћаркер = м онст.тип—“–ќ ј) “ќ√ƒј
                  Res := —тр_ƒлина(e.дв«начение) <= T.длина
               »Ќј„≈
                  Res := e.у“ип = T
                ќЌ≈÷
             ќЌ≈÷
         |м онст.тип«јѕ»—№: Res := м“ип.ѕредок_—равнить(T, e.у“ип)
         |м онст.тип” ј«ј“≈Ћ№: Res := м“ип.ѕредок_—равнить(T, e.у“ип) »Ћ» (e.у“ип.цћаркер = м онст.типѕ”—“ќ)
         |м онст.типѕ–ќ÷≈ƒ”–ј: Res := (e.у“ип.цћаркер = м онст.типѕ”—“ќ) »Ћ» (e.ц“ип = ePROC) & ProcTypeComp(e.у—ущ.у“ип, T) »Ћ»
            (e.ц“ип # ePROC) & ProcTypeComp(e.у“ип, T)
      »Ќј„≈
         Res := Ћќ∆№
       ќЌ≈÷
      ¬≈–Ќ”“№ Res
    ќЌ≈÷ AssComp;

ѕ–ќ÷≈ƒ”–ј ParamComp(e: мƒецл.т¬ыражение; T: м“ип.ту“ип; ByRef: Ѕ”Ћ≈¬ќ): Ѕ”Ћ≈¬ќ;
   ѕ≈–≈ћ
      Res: Ѕ”Ћ≈¬ќ;
   Ќј„јЋќ
      ≈—Ћ» ByRef “ќ√ƒј
         ≈—Ћ» e.ц“ип = м онст.eVAR “ќ√ƒј
            ¬џЅќ– T.цћаркер »«
               |м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў, м онст.типЋ»“≈–ј,
                  м онст.типЌјЅќ–, м онст.типЅ”Ћ≈¬ќ, м онст.тип” ј«ј“≈Ћ№, м онст.TCARD16:
                  Res := e.у“ип = T
               |м онст.типћј——»¬:
                  ≈—Ћ» T.длина > 0 “ќ√ƒј
                      Res := e.у“ип = T
                  »Ќј„≈
                      Res := ArrComp(e.у“ип, T)
                   ќЌ≈÷
               |м онст.тип«јѕ»—№:
                  Res := м“ип.ѕредок_—равнить(T, e.у“ип)
               |м онст.типѕ–ќ÷≈ƒ”–ј:
                  Res := ProcTypeComp(e.у“ип, T)
            »Ќј„≈
             ќЌ≈÷
         »Ќј„≈
            Res := Ћќ∆№
          ќЌ≈÷
      »Ќј„≈
         Res := AssComp(e, T, »—“»Ќј)
       ќЌ≈÷
      ¬≈–Ќ”“№ Res
     ќЌ≈÷ ParamComp;

ѕ–ќ÷≈ƒ”–ј Call(param: мƒецл.туѕоле);
   ѕ≈–≈ћ
      i, n: ÷≈Ћќ≈;
      e1: мƒецл.т¬ыражение;
      s: м—тр.ту—трока;
      A: X86.TIDX;
      TA: м“ип.ту“ип;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      ѕќ ј param # ѕ”—“ќ ƒ≈Ћј“№
         мќш. оорд_”ст(у оорд);
         X86.Param;
         п¬ыраж(e1);
         мѕров.“ест(ParamComp(e1, param.у“ип, param.ByRef), у оорд, 114);
         мѕров.“ест(~(param.ByRef & e1.б„тение), у оорд, 115);
         мѕров.“ест(~((e1.ц“ип = ePROC) & (e1.у—ущ.Level > 3)), у оорд, 116);
         ≈—Ћ» (e1.ц“ип = м онст.eVAR) & ~param.ByRef “ќ√ƒј
            X86.Load(e1.у“ип.цћаркер)
          ќЌ≈÷;
         ≈—Ћ» param.ByRef & (e1.у“ип.цћаркер = м онст.тип«јѕ»—№) “ќ√ƒј
            ≈—Ћ» e1.vparam “ќ√ƒј
               X86.LocalAdr(e1.у—ущ.Offset - 4, мƒецл.модуль.ц”ровень - e1.у—ущ.Level);
               X86.Load(м онст.тип÷≈Ћќ≈)
            ј≈—Ћ» e1.deref “ќ√ƒј
               X86.DerefType(0)
            »Ќј„≈
               X86.PushConst(e1.у“ип.номер)
             ќЌ≈÷
          ќЌ≈÷;
         ≈—Ћ» ~param.ByRef & (param.у“ип.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў}) “ќ√ƒј
            X86.DropFpu(param.у“ип.цћаркер = м онст.типƒЋ»Ќ¬≈ў)
          ќЌ≈÷;
         ≈—Ћ» (e1.у“ип.цћаркер = м онст.тип—“–ќ ј) & (param.у“ип.цћаркер = м онст.типћј——»¬) “ќ√ƒј
            s := м—тр.у—трока_—оздать(e1.дв«начение);
            ≈—Ћ» s.длина = 1 “ќ√ƒј
               X86.Mono(s.номер)
             ќЌ≈÷;
            ≈—Ћ» param.у“ип.длина = 0 “ќ√ƒј
               A[0] := s.длина + 1;
               X86.OpenArray(A, 1)
             ќЌ≈÷
          ќЌ≈÷;
         ≈—Ћ» (e1.у“ип.цћаркер = м онст.типћј——»¬) & (мƒецл.Dim(param.у“ип) > мƒецл.Dim(e1.у“ип)) “ќ√ƒј
            n := мƒецл.Dim(param.у“ип) - мƒецл.Dim(e1.у“ип);
            TA := мƒецл.OpenBase(e1.у“ип);
            ƒЋя i := 0 ƒќ n - 1 ƒ≈Ћј“№
               A[i] := TA.длина;
               TA := TA.уѕредок
             ќЌ≈÷;
            ≈—Ћ» мƒецл.Dim(e1.у“ип) = 0 “ќ√ƒј
               X86.OpenArray(A, n)
            »Ќј„≈
               X86.ExtArray(A, n, мƒецл.Dim(e1.у“ип))
             ќЌ≈÷
          ќЌ≈÷;
         param := param.следующ(мƒецл.туѕоле);
         ≈—Ћ» param # ѕ”—“ќ “ќ√ƒј
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            мƒецл.—ущн—лед_ѕолуч
          ќЌ≈÷
       ќЌ≈÷;
      мƒецл.—ущность_ѕроверить(м онст.оп—кобкаѕр р);
      мƒецл.—ущн—лед_ѕолуч
    ќЌ≈÷ Call;

ѕ–ќ÷≈ƒ”–ј Factor(ѕ≈– e: мƒецл.т¬ыражение);
   ѕ≈–≈ћ
      ccall, p: ÷≈Ћќ≈;
      begcall: X86.ту«венојсм;
      s, str2: м—тр.ту—трока;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      e.ц“ип := eCONST;
      e.vparam := Ћќ∆№;
      ¬џЅќ– м—кан.ц—ущность »«
      |м онст.сущ»ћя:
         begcall := X86.current;
         ”казатель(e);
         ≈—Ћ» e.ц“ип = ePROC “ќ√ƒј
            ≈—Ћ» м—кан.ц—ущность = м онст.оп—кобкаЋев ругл “ќ√ƒј
               мѕров.“ест2(e.у—ущ.у“ип.уѕредок.цћаркер # м онст.TVOID, 73);
               мƒецл.—ущн—лед_ѕолуч;
               X86.PushCall(begcall);
               Call(e.у—ущ.у“ип.пол€.предыдущ(мƒецл.туѕоле));
               X86.¬ызов_«акончить;
               e.ц“ип := eEXP;
               e.у“ип := e.у—ущ.у“ип.уѕредок;
               ≈—Ћ» e.у—ущ.Level = 3 “ќ√ƒј
                  ccall := 0
               ј≈—Ћ» e.у—ущ.Level > мƒецл.curBlock.Level “ќ√ƒј
                  ccall := 1
               »Ќј„≈
                  ccall := 2
                ќЌ≈÷;
               X86.Call(e.у—ущ.Number, »—“»Ќј, e.у“ип.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў}, e.у—ущ.у“ип.вызов, ccall, e.у—ущ.Level - 3,
               мƒецл.curBlock.Level - 3, e.у—ущ.ParamSize, мƒецл.curBlock.LocalSize)
            »Ќј„≈
               X86.PushInt(e.у—ущ.Number)
             ќЌ≈÷
         ј≈—Ћ» (e.ц“ип = м онст.eVAR) & (e.у“ип.цћаркер = м онст.типѕ–ќ÷≈ƒ”–ј) & (м—кан.ц—ущность = м онст.оп—кобкаЋев ругл) “ќ√ƒј
            мѕров.“ест2(e.у“ип.уѕредок.цћаркер # м онст.TVOID, 73);
            мƒецл.—ущн—лед_ѕолуч;
            X86.PushCall(begcall);
            Call(e.у“ип.пол€.предыдущ(мƒецл.туѕоле));
            X86.¬ызов_«акончить;
            e.ц“ип := eEXP;
            X86.CallVar(»—“»Ќј, e.у“ип.уѕредок.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў}, e.у“ип.вызов, e.у“ип.длина, мƒецл.curBlock.LocalSize);
            e.у“ип := e.у“ип.уѕредок;
         ј≈—Ћ» e.ц“ип ¬ {eSTPROC, eSYSPROC} “ќ√ƒј
            StFunc(e, e.у—ущ.StProc)
          ќЌ≈÷
      |м онст.ксѕ”—“ќ:
         e.у“ип := sttypes[м онст.типѕ”—“ќ];
         e.дв«начение := 0.0D0;
         X86.PushConst(0);
         мƒецл.—ущн—лед_ѕолуч
      |м онст.кс»—“»Ќј:
         e.у“ип := sttypes[м онст.типЅ”Ћ≈¬ќ];
         e.дв«начение := 1.0D0;
         X86.PushConst(1);
         мƒецл.—ущн—лед_ѕолуч
      |м онст.ксЋќ∆№:
         e.у“ип := sttypes[м онст.типЅ”Ћ≈¬ќ];
         e.дв«начение := 0.0D0;
         X86.PushConst(0);
         мƒецл.—ущн—лед_ѕолуч
      |м онст.lxCHX, м онст.сущ—“–ќ ј:
         ≈—Ћ» м—кан.ц—ущность = м онст.сущ—“–ќ ј “ќ√ƒј
            м—кан.стр—ущность_ѕолучить(стр—ущн);
            str2 := мƒецл.—тр_—оздать(стр—ущн);
            mSys.GET(mSys.ADR(str2), p);
            e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(p));
            s := м—тр.у—трока_—оздать(e.дв«начение);
            ≈—Ћ» s.длина = 1 “ќ√ƒј
               X86.PushConst(ЌЋ»“(s.стр[0]))
            »Ќј„≈
               X86.PushInt(s.номер)
             ќЌ≈÷
         »Ќј„≈
            str2 := мƒецл.—трћоно_—оздать(м—кан.vCHX);
            mSys.GET(mSys.ADR(str2), p);
            e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(p));
            X86.PushConst(ЌЋ»“(м—кан.vCHX))
          ќЌ≈÷;
         e.у“ип := sttypes[м онст.тип—“–ќ ј];
         мƒецл.—ущн—лед_ѕолуч
      |м онст.сущ¬≈ў:
         e.у“ип := sttypes[м онст.тип¬≈ў];
         e.дв«начение := м—кан.vFLT;
         X86.PushFlt(м—кан.vFLT);
         мƒецл.—ущн—лед_ѕолуч
      |м онст.сущƒЋ»Ќ¬≈ў:
         e.у“ип := sttypes[м онст.типƒЋ»Ќ¬≈ў];
         e.дв«начение := м—кан.vFLT;
         X86.PushFlt(м—кан.vFLT);
         мƒецл.—ущн—лед_ѕолуч
      |м онст.сущ÷≈Ћќ≈, м онст.сущ16:
         e.у“ип := sttypes[м онст.тип÷≈Ћќ≈];
         e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(м—кан.vINT));
         X86.PushConst(м—кан.vINT);
         мƒецл.—ущн—лед_ѕолуч
      |м онст.оп—кобкаЋев ругл:
         мƒецл.—ущн—лед_ѕолуч;
         п¬ыраж(e);
         мƒецл.—ущность_ѕроверить(м онст.оп—кобкаѕр р);
         мƒецл.—ущн—лед_ѕолуч
      |м онст.опќтриц:
         —ущн—лед оорд_”ст(у оорд);
         Factor(e);
         мѕров.“ест(e.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ, у оорд, 37);
         ¬ыраж_«агрузить(e);
         ≈—Ћ» e.ц“ип = eCONST “ќ√ƒј
            e.дв«начение := ”ƒЋ»Ќ( ¬≈ў(ЌЋ»“(e.дв«начение = 0.0D0)))
         »Ќј„≈
            e.ц“ип := eEXP
          ќЌ≈÷;
         X86.Not;
         e.vparam := Ћќ∆№
      |м онст.оп—кобкаЋев‘иг:
         Ќабор(e)
      »Ќј„≈
         мѕров.“ест2(Ћќ∆№, 36)
       ќЌ≈÷
    ќЌ≈÷ Factor;

ѕ–ќ÷≈ƒ”–ј IsChr(a: мƒецл.т¬ыражение): Ѕ”Ћ≈¬ќ;
      ¬≈–Ќ”“№ (a.у“ип.цћаркер = м онст.тип—“–ќ ј) & (—тр_ƒлина(a.дв«начение) = 1) »Ћ» (a.у“ип.цћаркер = м онст.типЋ»“≈–ј)
    ќЌ≈÷ IsChr;

ѕ–ќ÷≈ƒ”–ј StrRel(a, b: мƒецл.т¬ыражение; Op: ÷≈Ћќ≈);
   Ќј„јЋќ
      ≈—Ћ» ~(IsChr(a) »Ћ» IsChr(b)) “ќ√ƒј
         X86.strcmp(Op, 0)
      ј≈—Ћ» IsChr(a) & IsChr(b) “ќ√ƒј
         X86.CmpInt(Op)
      ј≈—Ћ» IsChr(a) “ќ√ƒј
         X86.strcmp(Op, 1)
      »Ќј„≈
         X86.strcmp(Op, -1)
       ќЌ≈÷
    ќЌ≈÷ StrRel;

ѕ–ќ÷≈ƒ”–ј log2(n: ÷≈Ћќ≈): ÷≈Ћќ≈;
   ѕ≈–≈ћ
      x, i: ÷≈Ћќ≈;
   Ќј„јЋќ
      x := 1;
      i := 0;
      ѕќ ј (x # n) & (i < 31) ƒ≈Ћј“№
         x := Ћ—Ћ(x, 1);
         ƒќЅ(i)
       ќЌ≈÷;
      ≈—Ћ» x # n “ќ√ƒј
         i := -1
       ќЌ≈÷
      ¬≈–Ќ”“№ i
    ќЌ≈÷ log2;

ѕ–ќ÷≈ƒ”–ј Operation(ѕ≈– a, b: мƒецл.т¬ыражение; у оорд_:мќш.ту оорд; Op: ÷≈Ћќ≈);
   ѕ≈–≈ћ
      n, m: ÷≈Ћќ≈;
   Ќј„јЋќ
      ¬џЅќ– Op »«
      |м онст.опѕлюс, м онст.опћинус, м онст.оп”множ, м онст.опƒелен:
         мѕров.“ест((a.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў, м онст.типЌјЅќ–}) & (a.у“ип.цћаркер = b.у“ип.цћаркер), у оорд_, 37);
         мѕров.“ест(~((Op = м онст.опƒелен) & (a.у“ип.цћаркер = м онст.тип÷≈Ћќ≈)), у оорд_, 37);
         ¬џЅќ– a.у“ип.цћаркер »«
            |м онст.тип÷≈Ћќ≈: X86.Int(Op)
            |м онст.типЌјЅќ–: X86.Set(Op)
            |м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў: X86.farith(Op)
         »Ќј„≈
          ќЌ≈÷
      |м онст.ксƒ≈Ћ, м онст.ксќ—“:
         мѕров.“ест((a.у“ип.цћаркер = м онст.тип÷≈Ћќ≈) & (b.у“ип.цћаркер = м онст.тип÷≈Ћќ≈), у оорд_, 37);
         ≈—Ћ» b.ц“ип = eCONST “ќ√ƒј
         m :=  ÷≈Ћ(b.дв«начение);
         мѕров.“ест(m # 0, у оорд_, 48);
         n := log2(m);
         ≈—Ћ» n = -1 “ќ√ƒј
            X86.idivmod(Op = м онст.ксќ—“)
         »Ќј„≈
            X86.Drop;
            ≈—Ћ» Op = м онст.ксќ—“ “ќ√ƒј
               n := ЌЋ»“(-Ѕ»“(Ћ—Ћ(-1, n)));
               X86.PushConst(n);
               X86.Set(м онст.оп”множ)
            »Ќј„≈
               X86.PushConst(n);
               X86.StFunc(м онст.проц«—ѕ)
             ќЌ≈÷
          ќЌ≈÷
      »Ќј„≈
         X86.idivmod(Op = м онст.ксќ—“)
       ќЌ≈÷
      |м онст.оп», м онст.кс»Ћ»:
         мѕров.“ест((a.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ) & (b.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ), у оорд_, 37)
      |м онст.кс¬:
          мѕров.“ест((a.у“ип.цћаркер = м онст.тип÷≈Ћќ≈) & (b.у“ип.цћаркер = м онст.типЌјЅќ–), у оорд_, 37);
          X86.inset
      |м онст.опћеньше, м онст.опћеньше»ли–авно, м онст.опЅольше, м онст.опЅольше»ли–авно:
         мѕров.“ест(((a.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў}) & (a.у“ип.цћаркер = b.у“ип.цћаркер)) »Ћ»
         (IsChr(a) »Ћ» ≈сли—трока(a)) & (IsChr(b) »Ћ» ≈сли—трока(b)) »Ћ»
         (a.у“ип.цћаркер = м онст.типЌјЅќ–) & (b.у“ип.цћаркер = м онст.типЌјЅќ–) & ((Op = м онст.опћеньше»ли–авно) »Ћ» (Op = м онст.опЅольше»ли–авно)), у оорд_, 37);
         ≈—Ћ» a.у“ип.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў} “ќ√ƒј
            X86.fcmp(Op)
         ј≈—Ћ» a.у“ип.цћаркер = м онст.типЌјЅќ– “ќ√ƒј
            X86.Inclusion(Op)
         ј≈—Ћ» ≈сли—трока(a) »Ћ» ≈сли—трока(b) “ќ√ƒј
            StrRel(a, b, Op)
         »Ќј„≈
            X86.CmpInt(Op)
          ќЌ≈÷
      |м онст.оп–авно, м онст.опЌе–авно:
         мѕров.“ест(((a.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў, м онст.типЌјЅќ–, м онст.типЅ”Ћ≈¬ќ}) & (a.у“ип.цћаркер = b.у“ип.цћаркер)) »Ћ»
         (IsChr(a) »Ћ» ≈сли—трока(a)) & (IsChr(b) »Ћ» ≈сли—трока(b)) »Ћ»
         (a.у“ип.цћаркер ¬ {м онст.тип” ј«ј“≈Ћ№, м онст.типѕ–ќ÷≈ƒ”–ј, м онст.типѕ”—“ќ}) & (b.у“ип.цћаркер = м онст.типѕ”—“ќ) »Ћ»
         (b.у“ип.цћаркер ¬ {м онст.тип” ј«ј“≈Ћ№, м онст.типѕ–ќ÷≈ƒ”–ј, м онст.типѕ”—“ќ}) & (a.у“ип.цћаркер = м онст.типѕ”—“ќ) »Ћ»
         (a.у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№) & (b.у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№) & (м“ип.ѕредок_—равнить(a.у“ип, b.у“ип) »Ћ» м“ип.ѕредок_—равнить(b.у“ип, a.у“ип)) »Ћ»
         (a.у“ип.цћаркер = м онст.типѕ–ќ÷≈ƒ”–ј) & ProcTypeComp(b.у“ип, a.у“ип) »Ћ» (a.ц“ип = ePROC) & ProcTypeComp(b.у“ип, a.у—ущ.у“ип) »Ћ»
         (b.ц“ип = ePROC) & ProcTypeComp(a.у“ип, b.у—ущ.у“ип), у оорд_, 37);
         ≈—Ћ» a.у“ип.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў} “ќ√ƒј
            X86.fcmp(Op)
         ј≈—Ћ» ≈сли—трока(a) »Ћ» ≈сли—трока(b) “ќ√ƒј
            StrRel(a, b, Op)
         »Ќј„≈
            X86.CmpInt(Op)
          ќЌ≈÷
      »Ќј„≈
       ќЌ≈÷;
      ≈—Ћ» (a.ц“ип # eCONST) »Ћ» (b.ц“ип # eCONST) “ќ√ƒј
         a.ц“ип := eEXP;
         ≈—Ћ» мƒецл.Relation(Op) “ќ√ƒј
            a.у“ип := sttypes[м онст.типЅ”Ћ≈¬ќ]
          ќЌ≈÷
      »Ќј„≈
         мƒецл.Calc(a.дв«начение, b.дв«начение, a.у“ип, b.у“ип, Op, у оорд_, a.дв«начение, a.у“ип)
       ќЌ≈÷;
      a.vparam := Ћќ∆№
    ќЌ≈÷ Operation;

ѕ–ќ÷≈ƒ”–ј Term(ѕ≈– e: мƒецл.т¬ыражение);
   ѕ≈–≈ћ
      a: мƒецл.т¬ыражение;
      Op, L: ÷≈Ћќ≈;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      Factor(e);
      ѕќ ј (м—кан.ц—ущность = м онст.оп”множ) »Ћ» (м—кан.ц—ущность = м онст.опƒелен) »Ћ»
               (м—кан.ц—ущность = м онст.ксƒ≈Ћ) »Ћ» (м—кан.ц—ущность = м онст.ксќ—“) »Ћ»
               (м—кан.ц—ущность = м онст.оп») ƒ≈Ћј“№
         ¬ыраж_«агрузить(e);
         мќш. оорд_”ст(у оорд);
         Op := м—кан.ц—ущность;
         мƒецл.—ущн—лед_ѕолуч;
         ≈—Ћ» Op = м онст.оп» “ќ√ƒј
            L := X86.NewLabel();
            X86.IfWhile(L, Ћќ∆№)
          ќЌ≈÷;
         Factor(a);
         ¬ыраж_«агрузить(a);
         ≈—Ћ» Op = м онст.оп» “ќ√ƒј
            X86.Label(L)
          ќЌ≈÷;
         Operation(e, a, у оорд, Op)
       ќЌ≈÷
    ќЌ≈÷ Term;

ѕ–ќ÷≈ƒ”–ј Simple(ѕ≈– e: мƒецл.т¬ыражение);
   ѕ≈–≈ћ
      a: мƒецл.т¬ыражение;
      Op, uOp, L: ÷≈Ћќ≈;
      у оорд, у оорд_у: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      Ќќ¬(у оорд_у);
      uOp := 0;
      ≈—Ћ» (м—кан.ц—ущность = м онст.опѕлюс) »Ћ» (м—кан.ц—ущность = м онст.опћинус) “ќ√ƒј
         мќш. оорд_”ст(у оорд_у);
         uOp := м—кан.ц—ущность;
         мƒецл.—ущн—лед_ѕолуч
       ќЌ≈÷;
      Term(e);
      ≈—Ћ» uOp # 0 “ќ√ƒј
         мѕров.“ест(e.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў, м онст.типЌјЅќ–}, у оорд_у, 37);
         ¬ыраж_«агрузить(e);
         ≈—Ћ» uOp = м онст.опћинус “ќ√ƒј
            ¬џЅќ– e.у“ип.цћаркер »«
               |м онст.тип÷≈Ћќ≈: X86.NegInt
               |м онст.типЌјЅќ–: X86.NegSet
               |м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў: X86.fneg
            »Ќј„≈
             ќЌ≈÷
          ќЌ≈÷;
         ≈—Ћ» (uOp = м онст.опћинус) & (e.ц“ип = eCONST) “ќ√ƒј
            ¬џЅќ– e.у“ип.цћаркер »«
               |м онст.тип÷≈Ћќ≈:
                  мѕров.“ест(e.дв«начение # ”ƒЋ»Ќ( ¬≈ў(м онст.целое_мин)), у оорд_у, мƒецл.IOVER)
               |м онст.типЌјЅќ–:
                  e.дв«начение := -”ƒЋ»Ќ( ¬≈ў(ЌЋ»“(-Ѕ»“( ÷≈Ћ(e.дв«начение)))))
            »Ќј„≈
             ќЌ≈÷;
            e.дв«начение := -e.дв«начение
          ќЌ≈÷;
         ≈—Ћ» e.ц“ип # eCONST “ќ√ƒј
            e.ц“ип := eEXP
          ќЌ≈÷;
         e.vparam := Ћќ∆№
       ќЌ≈÷;
      ѕќ ј (м—кан.ц—ущность = м онст.опѕлюс) »Ћ» (м—кан.ц—ущность = м онст.опћинус) »Ћ» (м—кан.ц—ущность = м онст.кс»Ћ») ƒ≈Ћј“№
         ¬ыраж_«агрузить(e);
         мќш. оорд_”ст(у оорд);
         Op := м—кан.ц—ущность;
         мƒецл.—ущн—лед_ѕолуч;
         ≈—Ћ» Op = м онст.кс»Ћ» “ќ√ƒј
            L := X86.NewLabel();
            X86.IfWhile(L, »—“»Ќј)
          ќЌ≈÷;
         Term(a);
         ¬ыраж_«агрузить(a);
         ≈—Ћ» Op = м онст.кс»Ћ» “ќ√ƒј
            X86.Label(L)
          ќЌ≈÷;
         Operation(e, a, у оорд, Op)
       ќЌ≈÷
    ќЌ≈÷ Simple;

ѕ–ќ÷≈ƒ”–ј Expr(ѕ≈– e: мƒецл.т¬ыражение);
   ѕ≈–≈ћ
      a: мƒецл.т¬ыражение;
      Op, fpu: ÷≈Ћќ≈;
      T: м“ип.ту“ип;
      beg: X86.ту«венојсм;
      s: м—тр.ту—трока;
      у оорд, у оорд2: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      Ќќ¬(у оорд2);
      fpu := X86.fpu;
      beg := X86.current;
      Simple(e);
      ≈—Ћ» мƒецл.Relation(м—кан.ц—ущность) “ќ√ƒј
         мќш. оорд_”ст(у оорд);
         Op := м—кан.ц—ущность;
         мƒецл.—ущн—лед_ѕолуч;
         ≈—Ћ» Op = м онст.кс≈—“№ “ќ√ƒј
            мѕров.“ест(e.у“ип.цћаркер ¬ {м онст.тип«јѕ»—№, м онст.тип” ј«ј“≈Ћ№}, у оорд, 37);
            ≈—Ћ» e.у“ип.цћаркер = м онст.тип«јѕ»—№ “ќ√ƒј
               мѕров.“ест(e.vparam, у оорд, 37)
             ќЌ≈÷;
            мƒецл.—ущность_ѕроверить(м онст.сущ»ћя);
            мќш. оорд_”ст(у оорд2);
            T := мƒецл.IdType(у оорд2);
            мѕров.“ест(T # ѕ”—“ќ, у оорд2, 42);
            ≈—Ћ» e.у“ип.цћаркер = м онст.тип«јѕ»—№ “ќ√ƒј
               мѕров.“ест(T.цћаркер = м онст.тип«јѕ»—№, у оорд2, 106)
            »Ќј„≈
               мѕров.“ест(T.цћаркер = м онст.тип” ј«ј“≈Ћ№, у оорд2, 107)
             ќЌ≈÷;
            мѕров.“ест(м“ип.ѕредок_—равнить(e.у“ип, T), у оорд, 37);
            ≈—Ћ» e.у“ип.цћаркер = м онст.тип«јѕ»—№ “ќ√ƒј
               X86.Drop;
               X86.LocalAdr(e.у—ущ.Offset, мƒецл.модуль.ц”ровень - e.у—ущ.Level)
             ќЌ≈÷;
            ¬ыраж_«агрузить(e);
            ≈—Ћ» e.у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№ “ќ√ƒј
               T := T.уѕредок
             ќЌ≈÷;
            X86.Guard(T.номер, »—“»Ќј);
            e.у“ип := sttypes[м онст.типЅ”Ћ≈¬ќ];
            e.ц“ип := eEXP;
            e.vparam := Ћќ∆№
         »Ќј„≈
            ¬ыраж_«агрузить(e);
            —трока(e);
            Simple(a);
            ¬ыраж_«агрузить(a);
            —трока(a);
            Operation(e, a, у оорд, Op)
          ќЌ≈÷
       ќЌ≈÷;
      ≈—Ћ» e.ц“ип = eCONST “ќ√ƒј
         X86.Del(beg);
         X86.Setfpu(fpu);
         ≈—Ћ» ~мƒецл.Const “ќ√ƒј
            ¬џЅќ– e.у“ип.цћаркер »«
               |м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў:
                  X86.PushFlt(e.дв«начение)
               |м онст.тип÷≈Ћќ≈, м онст.типЌјЅќ–, м онст.типЅ”Ћ≈¬ќ, м онст.типѕ”—“ќ:
                  X86.PushConst( ÷≈Ћ(e.дв«начение))
               |м онст.тип—“–ќ ј:
                  s := м—тр.у—трока_—оздать(e.дв«начение);
                  ≈—Ћ» s.длина = 1 “ќ√ƒј
                    X86.PushConst(ЌЋ»“(s.стр[0]))
                  »Ќј„≈
                    X86.PushInt(s.номер)
                   ќЌ≈÷
            »Ќј„≈
             ќЌ≈÷
          ќЌ≈÷
       ќЌ≈÷
    ќЌ≈÷ Expr;

ѕ–ќ÷≈ƒ”–ј IfWhileOper(wh: Ѕ”Ћ≈¬ќ);
   ѕ≈–≈ћ
      e: мƒецл.т¬ыражение;
      L, L3: ÷≈Ћќ≈;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      L := X86.NewLabel();
      ≈—Ћ» wh “ќ√ƒј
        X86.Label(L)
       ќЌ≈÷;
      ѕќ¬“ќ–я“№
         —ущн—лед оорд_”ст(у оорд);
         Expr(e);
         мѕров.“ест(e.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ, у оорд, 117);
         ¬ыраж_«агрузить(e);
         ≈—Ћ» wh “ќ√ƒј
            мƒецл.—ущность_ѕроверить(м онст.ксƒ≈Ћј“№)
         »Ќј„≈
            мƒецл.—ущность_ѕроверить(м онст.кс“ќ√ƒј)
          ќЌ≈÷;
         L3 := X86.NewLabel();
         X86.ifwh(L3);
         мƒецл.—ущн—лед_ѕолуч;
         pOpSeq;
         X86.jmp(X86.JMP, L);
         X86.Label(L3)
      ѕќ јЌ≈ м—кан.ц—ущность # м онст.ксј≈—Ћ»;
      ≈—Ћ» ~wh & (м—кан.ц—ущность = м онст.кс»Ќј„≈) “ќ√ƒј
         мƒецл.—ущн—лед_ѕолуч;
         pOpSeq
       ќЌ≈÷;
      мƒецл.—ущность_ѕроверить(м онст.кс ќЌ≈÷);
      ≈—Ћ» ~wh “ќ√ƒј
         X86.Label(L)
       ќЌ≈÷;
      мƒецл.—ущн—лед_ѕолуч
    ќЌ≈÷ IfWhileOper;

ѕ–ќ÷≈ƒ”–ј  л—лово_ѕќ¬“ќ–;
   ѕ≈–≈ћ
      e: мƒецл.т¬ыражение;
      L: ÷≈Ћќ≈;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      мƒецл.—ущн—лед_ѕолуч;
      L := X86.NewLabel();
      X86.Label(L);
      pOpSeq;
      мƒецл.—ущность_ѕроверить(м онст.ксѕќ јЌ≈);
      —ущн—лед оорд_”ст(у оорд);
      Expr(e);
      мѕров.“ест(e.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ, у оорд, 117);
      ¬ыраж_«агрузить(e);
      X86.ifwh(L)
    ќЌ≈÷  л—лово_ѕќ¬“ќ–;

ѕ–ќ÷≈ƒ”–ј  л—лово_ƒЋя;
   ѕ≈–≈ћ
      e: мƒецл.т¬ыражение;
      LBeg, LEnd, iValue: ÷≈Ћќ≈;
      Value: ƒЋ»Ќ¬≈ў;
      T: м“ип.ту“ип;
      name: м”зел.ту«вено—ущ;
      id: мƒецл.ту—ущность;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      —ущность—лед_ѕроверить(м онст.сущ»ћя);
      name := м—кан.у—ущность;
      id := мƒецл.GetIdent(name);
      мѕров.“ест2(id # ѕ”—“ќ, 42);
      мѕров.“ест2(id.iType = IDVAR, 126);
      мѕров.“ест2(id.VarKind = 0, 127);
      мѕров.“ест2(id.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, 128);
      мѕров.“ест2(id.Level = мƒецл.модуль.ц”ровень, 129);
      —ущность—лед_ѕроверить(м онст.опѕрисвоить);
      —ущн—лед оорд_”ст(у оорд);
      ≈—Ћ» id.Level = 3 “ќ√ƒј
         X86.GlobalAdr(id.Offset)
      »Ќј„≈
         X86.LocalAdr(id.Offset, 0)
       ќЌ≈÷;
      X86.Dup;
      Expr(e);
      мѕров.“ест(e.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
      ¬ыраж_«агрузить(e);
      X86.Save(м онст.тип÷≈Ћќ≈);
      мƒецл.—ущность_ѕроверить(м онст.ксƒќ);
      —ущн—лед оорд_”ст(у оорд);
      Expr(e);
      мѕров.“ест(e.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
      ¬ыраж_«агрузить(e);
      iValue := 1;
      ≈—Ћ» м—кан.ц—ущность = м онст.ксѕќ “ќ√ƒј
         —ущн—лед оорд_”ст(у оорд);
         мƒецл.ConstExpr(Value, T);
         мѕров.“ест(T.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
         iValue :=  ÷≈Ћ(Value);
         мѕров.“ест(iValue # 0, у оорд, 122)
       ќЌ≈÷;
      мƒецл.—ущность_ѕроверить(м онст.ксƒ≈Ћј“№);
      мƒецл.—ущн—лед_ѕолуч;
      X86.For(iValue > 0, LBeg, LEnd);
      pOpSeq;
      X86.NextFor(iValue, LBeg, LEnd);
      мƒецл.—ущность_ѕроверить(м онст.кс ќЌ≈÷);
      мƒецл.—ущн—лед_ѕолуч
    ќЌ≈÷  л—лово_ƒЋя;

ѕ–ќ÷≈ƒ”–ј ћетка_ѕроверить(a, b: ÷≈Ћќ≈; Labels: м÷епь.ту÷епь): Ѕ”Ћ≈¬ќ;
   ѕ≈–≈ћ
      cur: тћетка;
   Ќј„јЋќ
      cur := Labels.предыдущ(тћетка);
      ѕќ ј (cur # ѕ”—“ќ) & ((b < cur.a) »Ћ» (a > cur.b)) ƒ≈Ћј“№
        cur := cur.следующ(тћетка)
       ќЌ≈÷
      ¬≈–Ќ”“№ cur = ѕ”—“ќ
    ќЌ≈÷ ћетка_ѕроверить;

ѕ–ќ÷≈ƒ”–ј LabelVal(ѕ≈– a: ÷≈Ћќ≈; int: Ѕ”Ћ≈¬ќ);
   ѕ≈–≈ћ
      Value: ƒЋ»Ќ¬≈ў;
      T: м“ип.ту“ип;
      s: м—тр.ту—трока;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      мќш. оорд_”ст(у оорд);
      мƒецл.ConstExpr(Value, T);
      ≈—Ћ» int “ќ√ƒј
         мѕров.“ест(T.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 161);
         a :=  ÷≈Ћ(Value)
      »Ќј„≈
         мѕров.“ест(T.цћаркер = м онст.тип—“–ќ ј, у оорд, 55);
         s := м—тр.у—трока_—оздать(Value);
         мѕров.“ест(s.длина = 1, у оорд, 94);
         a := ЌЋ»“(s.стр[0])
       ќЌ≈÷
    ќЌ≈÷ LabelVal;

ѕ–ќ÷≈ƒ”–ј Label(int: Ѕ”Ћ≈¬ќ; Labels: м÷епь.ту÷епь; LBeg: ÷≈Ћќ≈);
   ѕ≈–≈ћ
      a, b: ÷≈Ћќ≈;
      label: тћетка;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      мќш. оорд_”ст(у оорд);
      LabelVal(a, int);
      b := a;
      ≈—Ћ» м—кан.ц—ущность = lxDbl “ќ√ƒј
         мƒецл.—ущн—лед_ѕолуч;
         LabelVal(b, int)
       ќЌ≈÷;
      мѕров.“ест(a <= b, у оорд, 54);
      мѕров.“ест(ћетка_ѕроверить(a, b, Labels), у оорд, 100);
      Ќќ¬(label);
      мѕам.ћало(label = ѕ”—“ќ);
      label.a := a;
      label.b := b;
      м÷епь.ƒобавить(Labels, label);
      X86.CaseLabel(a, b, LBeg)
    ќЌ≈÷ Label;

ѕ–ќ÷≈ƒ”–ј Variant(int: Ѕ”Ћ≈¬ќ; Labels: м÷епь.ту÷епь; EndCase: ÷≈Ћќ≈);
   ѕ≈–≈ћ
      LBeg, LEnd: ÷≈Ћќ≈;
   Ќј„јЋќ
      LBeg := X86.NewLabel();
      LEnd := X86.NewLabel();
      ≈—Ћ» ~((м—кан.ц—ущность = м онст.оп¬ыбор) »Ћ» (м—кан.ц—ущность = м онст.кс ќЌ≈÷)) “ќ√ƒј
         Label(int, Labels, LBeg);
         ѕќ ј м—кан.ц—ущность = м онст.оп«ап€та€ ƒ≈Ћј“№
            мƒецл.—ущн—лед_ѕолуч;
            Label(int, Labels, LBeg)
          ќЌ≈÷;
         мƒецл.—ущность_ѕроверить(м онст.опƒвоеточ);
         мƒецл.—ущн—лед_ѕолуч;
         X86.jmp(X86.JMP, LEnd);
         X86.Label(LBeg);
         pOpSeq;
         X86.jmp(X86.JMP, EndCase);
         X86.Label(LEnd)
       ќЌ≈÷
    ќЌ≈÷ Variant;

ѕ–ќ÷≈ƒ”–ј  л—лово_¬џЅќ–;
   ѕ≈–≈ћ
      e: мƒецл.т¬ыражение;
      int: Ѕ”Ћ≈¬ќ;
      EndCase: ÷≈Ћќ≈;
      Labels: м÷епь.ту÷епь;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      —ущн—лед оорд_”ст(у оорд);
      Expr(e);
      мѕров.“ест(e.у“ип.цћаркер ¬ {м онст.типЋ»“≈–ј, м онст.тип—“–ќ ј, м онст.тип÷≈Ћќ≈}, у оорд, 156);
      мѕров.“ест(~((e.у“ип.цћаркер = м онст.тип—“–ќ ј) & (—тр_ƒлина(e.дв«начение) # 1)), у оорд, 94);
      int := e.у“ип.цћаркер = м онст.тип÷≈Ћќ≈;
      мƒецл.—ущность_ѕроверить(м онст.кс»«);
      ¬ыраж_«агрузить(e);
      X86.Drop;
      Labels := м÷епь.—оздать();
      мѕам.ћало(Labels = ѕ”—“ќ);
      мƒецл.—ущн—лед_ѕолуч;
      EndCase := X86.NewLabel();
      Variant(int, Labels, EndCase);
      ѕќ ј м—кан.ц—ущность = м онст.оп¬ыбор ƒ≈Ћј“№
         мƒецл.—ущн—лед_ѕолуч;
         Variant(int, Labels, EndCase)
       ќЌ≈÷;
      ≈—Ћ» м—кан.ц—ущность = м онст.кс»Ќј„≈ “ќ√ƒј
         мƒецл.—ущн—лед_ѕолуч;
         pOpSeq
      »Ќј„≈
         м”тиль. од—трока_”ст(мƒецл.UnitNumber, мќш.у оорд.ц—трока);
         X86.OnError(7)
       ќЌ≈÷;
      мƒецл.—ущность_ѕроверить(м онст.кс ќЌ≈÷);
      X86.Label(EndCase);
      мƒецл.—ущн—лед_ѕолуч;
      м÷епь.ќчистить(Labels)
    ќЌ≈÷  л—лово_¬џЅќ–;

ѕ–ќ÷≈ƒ”–ј CheckCode(Code: м—тр.т—трока; Len: ÷≈Ћќ≈; у оорд_:  мќш.ту оорд);
   ѕ≈–≈ћ
      i: ÷≈Ћќ≈;
   Ќј„јЋќ
      мѕров.“ест(~ODD(Len), у оорд_, 34);
      ƒЋя i := 0 ƒќ Len - 1 ƒ≈Ћј“№
         мѕров.“ест(м—кан.„исло16_ѕолуч(Code[i]), у оорд_, 34)
       ќЌ≈÷
    ќЌ≈÷ CheckCode;

ѕ–ќ÷≈ƒ”–ј StProc(proc: ÷≈Ћќ≈);
   ѕ≈–≈ћ
      iValue: ÷≈Ћќ≈;
      e1, e2: мƒецл.т¬ыражение;
      Value: ƒЋ»Ќ¬≈ў;
      T: м“ип.ту“ип;
      str: м—тр.ту—трока;
      begcall: X86.ту«венојсм;
      у оорд, у оорд2: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      Ќќ¬(у оорд2);
      мќш. оорд_”ст(у оорд2);
      мƒецл.—ущность_ѕроверить(м онст.оп—кобкаЋев ругл);
      —ущн—лед оорд_”ст(у оорд);
      ¬џЅќ– proc »«
         |м онст.процƒќЅ, м онст.проц¬џ„:
            ”казатель(e1);
            мѕров.“ест(e1.ц“ип = м онст.eVAR, у оорд, 63);
            мѕров.“ест(~e1.б„тение, у оорд, 115);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 128);
            ≈—Ћ» м—кан.ц—ущность = м онст.оп«ап€та€ “ќ√ƒј
               —ущн—лед оорд_”ст(у оорд);
               мƒецл.ConstExpr(Value, T);
               мѕров.“ест(T.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
               iValue :=  ÷≈Ћ(Value);
               мѕров.“ест(iValue # 0, у оорд, 122);
               ≈—Ћ» iValue < 0 “ќ√ƒј
                  ≈—Ћ» proc = м онст.процƒќЅ “ќ√ƒј
                     proc := м онст.проц¬џ„
                  »Ќј„≈
                     proc := м онст.процƒќЅ
                   ќЌ≈÷;
                  iValue := -iValue
                ќЌ≈÷;
               ≈—Ћ» iValue # 1 “ќ√ƒј
                  X86.PushConst(iValue);
                  ≈—Ћ» proc = м онст.проц¬џ„ “ќ√ƒј
                     X86.StProc(м онст.проц¬џ„)
                  »Ќј„≈
                     X86.StProc(м онст.процƒќЅ)
                   ќЌ≈÷
               »Ќј„≈
                  ≈—Ћ» proc = м онст.проц¬џ„ “ќ√ƒј
                     X86.StProc(м онст.проц«Ќ—Ћќ∆)
                  »Ќј„≈
                     X86.StProc(м онст.процƒќѕќЋЌ)
                   ќЌ≈÷
                ќЌ≈÷
            »Ќј„≈
               ≈—Ћ» proc = м онст.проц¬џ„ “ќ√ƒј
                  X86.StProc(м онст.проц«Ќ—Ћќ∆)
               »Ќј„≈
                  X86.StProc(м онст.процƒќѕќЋЌ)
                ќЌ≈÷
             ќЌ≈÷
         |м онст.процƒќЅ¬, м онст.проц¬џ„¬:
            ”казатель(e1);
            мѕров.“ест(e1.ц“ип = м онст.eVAR, у оорд, 63);
            мѕров.“ест(~e1.б„тение, у оорд, 115);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.типЌјЅќ–, у оорд, 138);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            —ущн—лед оорд_”ст(у оорд);
            мƒецл.ConstExpr(Value, T);
            мѕров.“ест(T.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            iValue :=  ÷≈Ћ(Value);
            мѕров.“ест(«—ѕ(iValue, 5) = 0, у оорд, 53);
            ≈—Ћ» proc = м онст.процƒќЅ¬ “ќ√ƒј
               X86.PushConst(ЌЋ»“({iValue}));
               X86.StProc(м онст.процƒќЅ¬)
            »Ќј„≈
               X86.PushConst(ЌЋ»“(-{iValue}));
               X86.StProc(м онст.проц¬џ„¬)
             ќЌ≈÷
         |м онст.проц ќѕ»я:
            Expr(e1);
            мѕров.“ест(≈сли—трока(e1), у оорд, 141);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            ≈—Ћ» e1.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
               str := м—тр.у—трока_—оздать(e1.дв«начение);
               ≈—Ћ» str.длина = 1 “ќ√ƒј
                  X86.Mono(str.номер);
                  X86.StrMono
                ќЌ≈÷
             ќЌ≈÷;
            —трока(e1);
            —ущн—лед оорд_”ст(у оорд);
            ”казатель(e2);
            мѕров.“ест(e2.ц“ип = м онст.eVAR, у оорд, 63);
            мѕров.“ест(≈сли—трока(e2), у оорд, 143);
            мѕров.“ест(~e2.б„тение, у оорд, 115);
            —трока(e2);
            X86.StProc(м онст.проц ќѕ»я)
         |м онст.процЌќ¬, м онст.процЋ»ЎЌ:
            ”казатель(e1);
            мѕров.“ест(e1.ц“ип = м онст.eVAR, у оорд, 63);
            мѕров.“ест(~e1.б„тение, у оорд, 115);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип” ј«ј“≈Ћ№, у оорд, 145);
            ≈—Ћ» proc = м онст.процЌќ¬ “ќ√ƒј
               X86.PushConst(e1.у“ип.уѕредок.номер);
               X86.PushConst(X86.Align(e1.у“ип.уѕредок.размер + 8, 32));
               X86.newrec
            »Ќј„≈
               X86.disprec
             ќЌ≈÷
         |м онст.проц ќЌ“–ќЋ№:
            Expr(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ, у оорд, 117);
            ¬ыраж_«агрузить(e1);
            ≈—Ћ» м—кан.ц—ущность = м онст.оп«ап€та€ “ќ√ƒј
               —ущн—лед оорд_”ст(у оорд);
               мƒецл.ConstExpr(Value, T);
               мѕров.“ест(T.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
               мѕров.“ест((Value >= 0.0D0) & (Value <= 127.0D0), у оорд, 95);
               X86.Assert(м онст.проц ќЌ“–ќЋ№,  ÷≈Ћ(Value))
            »Ќј„≈
               X86.Assert(м онст.проц ќЌ“–ѕ», 0)
             ќЌ≈÷
         |м онст.проц”ѕј , м онст.проц–ј—ѕ:
            ”казатель(e1);
            мѕров.“ест(e1.ц“ип = м онст.eVAR, у оорд, 63);
            мѕров.“ест(e1.у“ип.цћаркер ¬ {м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў}, у оорд, 149);
            мѕров.“ест(~e1.б„тение, у оорд, 115);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            —ущн—лед оорд_”ст(у оорд);
            ≈—Ћ» proc = м онст.проц–ј—ѕ “ќ√ƒј
               ”казатель(e2);
               мѕров.“ест(e2.ц“ип = м онст.eVAR, у оорд, 63);
               мѕров.“ест(e2.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 128);
               мѕров.“ест(~e2.б„тение, у оорд, 115);
               ≈—Ћ» e1.у“ип.цћаркер = м онст.типƒЋ»Ќ¬≈ў “ќ√ƒј
                  X86.StProc(м онст.проц–ј—ѕ)
               »Ќј„≈
                  X86.StProc(м онст.проц–ј—ѕ—ѕ≈÷)
                ќЌ≈÷
            »Ќј„≈
               Expr(e2);
               мѕров.“ест(e2.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
               ¬ыраж_«агрузить(e2);
               ≈—Ћ» e1.у“ип.цћаркер = м онст.типƒЋ»Ќ¬≈ў “ќ√ƒј
                  X86.StProc(м онст.проц”ѕј )
               »Ќј„≈
                  X86.StProc(м онст.проц”ѕј —ѕ≈÷)
                ќЌ≈÷
             ќЌ≈÷
         |м онст.sysBIT:
            Expr(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            —ущн—лед оорд_”ст(у оорд);
            Expr(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1)
         |м онст.sysPUT, м онст.sysGET:
            begcall := X86.current;
            Expr(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            —ущн—лед оорд_”ст(у оорд);
            ≈—Ћ» proc = м онст.sysGET “ќ√ƒј
               X86.PushCall(begcall);
               X86.Param;
               ”казатель(e2);
               мѕров.“ест(e2.ц“ип = м онст.eVAR, у оорд, 63);
               мѕров.“ест(e2.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў, м онст.типЋ»“≈–ј, м онст.типЌјЅќ–, м онст.типЅ”Ћ≈¬ќ, м онст.TCARD16}, у оорд, 154);
               мѕров.“ест(~e2.б„тение, у оорд, 115);
               X86.¬ызов_«акончить;
               X86.Load(e2.у“ип.цћаркер);
               X86.Save(e2.у“ип.цћаркер)
            »Ќј„≈
               Expr(e2);
               мѕров.“ест(e2.у“ип.цћаркер ¬ {м онст.тип÷≈Ћќ≈, м онст.тип¬≈ў, м онст.типƒЋ»Ќ¬≈ў, м онст.типЋ»“≈–ј, м онст.типЌјЅќ–, м онст.типЅ”Ћ≈¬ќ, м онст.TCARD16, м онст.тип—“–ќ ј}, у оорд, 153);
               ≈—Ћ» e2.у“ип.цћаркер = м онст.тип—“–ќ ј “ќ√ƒј
                  мѕров.“ест(—тр_ƒлина(e2.дв«начение) = 1, у оорд, 94)
                ќЌ≈÷;
               ¬ыраж_«агрузить(e2);
               X86.Save(e2.у“ип.цћаркер)
             ќЌ≈÷
         |м онст.sysCODE:
            мѕров.“ест(м—кан.ц—ущность = м онст.сущ—“–ќ ј, у оорд, 150);
            м—кан.стр—ущность_ѕолучить(стр—ущн);
            CheckCode(стр—ущн, м—кан.счЄтчик - 1, у оорд);
            X86.Asm(стр—ущн);
            мƒецл.—ущн—лед_ѕолуч
         |м онст.sysMOVE:
            begcall := X86.current;
            Expr(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            X86.PushCall(begcall);
            X86.Param;
            —ущн—лед оорд_”ст(у оорд);
            Expr(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
            мƒецл.—ущность_ѕроверить(м онст.оп«ап€та€);
            X86.¬ызов_«акончить;
            —ущн—лед оорд_”ст(у оорд);
            Expr(e1);
            мѕров.“ест(e1.у“ип.цћаркер = м онст.тип÷≈Ћќ≈, у оорд, 52);
            ¬ыраж_«агрузить(e1);
      »Ќј„≈
         мѕров.“ест(Ћќ∆№, у оорд2, 132)
       ќЌ≈÷;
      мƒецл.—ущность_ѕроверить(м онст.оп—кобкаѕр р);
      мƒецл.—ущн—лед_ѕолуч;
      ≈—Ћ» proc = м онст.sysMOVE “ќ√ƒј
         X86.StProc(м онст.sysMOVE);
      ј≈—Ћ» proc = м онст.sysBIT “ќ√ƒј
         мƒецл.—ущность_ѕроверить(м онст.опѕрисвоить);
         —ущн—лед оорд_”ст(у оорд);
         Expr(e1);
         мѕров.“ест(e1.у“ип.цћаркер = м онст.типЅ”Ћ≈¬ќ, у оорд, 117);
         ¬ыраж_«агрузить(e1);
         X86.StProc(м онст.sysBIT)
       ќЌ≈÷
    ќЌ≈÷ StProc;

ѕ–ќ÷≈ƒ”–ј IdentOper;
   ѕ≈–≈ћ
      e1, e2: мƒецл.т¬ыражение;
      ccall: ÷≈Ћќ≈;
      begcall: X86.ту«венојсм;
      s: м—тр.ту—трока;
      у оорд: мќш.ту оорд;
   Ќј„јЋќ
      Ќќ¬(у оорд);
      мќш. оорд_”ст(у оорд);
      begcall := X86.current;
      ”казатель(e1);
      мѕров.“ест(e1.ц“ип # eCONST, у оорд, 130);
      ≈—Ћ» (e1.ц“ип = м онст.eVAR) & (e1.у“ип.цћаркер # м онст.типѕ–ќ÷≈ƒ”–ј) “ќ√ƒј
         мƒецл.—ущность_ѕроверить(м онст.опѕрисвоить);
         мѕров.“ест(~e1.б„тение, у оорд, 115);
         —ущн—лед оорд_”ст(у оорд);
         Expr(e2);
         мѕров.“ест(AssComp(e2, e1.у“ип, Ћќ∆№), у оорд, 131);
         ¬ыраж_«агрузить(e2);
         ≈—Ћ» e1.у“ип.цћаркер = м онст.тип«јѕ»—№ “ќ√ƒј
            X86.PushConst(e1.у“ип.размер);
            X86.PushConst(e1.у“ип.номер);
            ≈—Ћ» e1.vparam “ќ√ƒј
               X86.LocalAdr(e1.у—ущ.Offset - 4, мƒецл.модуль.ц”ровень - e1.у—ущ.Level);
               X86.Load(м онст.тип÷≈Ћќ≈)
            ј≈—Ћ» e1.deref “ќ√ƒј
               X86.DerefType(12)
            »Ќј„≈
               X86.PushConst(e1.у“ип.номер)
             ќЌ≈÷
         ј≈—Ћ» e2.у“ип.цћаркер = м онст.типћј——»¬ “ќ√ƒј
            X86.PushConst(e2.у“ип.размер)
         ј≈—Ћ» (e2.у“ип.цћаркер = м онст.тип—“–ќ ј) & (e1.у“ип.цћаркер = м онст.типћј——»¬) “ќ√ƒј
            s := м—тр.у—трока_—оздать(e2.дв«начение);
            ≈—Ћ» s.длина = 1 “ќ√ƒј
               X86.Mono(s.номер)
             ќЌ≈÷;
            X86.PushConst(м”тиль.ћинимум(s.длина + 1, e1.у“ип.длина))
          ќЌ≈÷;
         X86.Save(e1.у“ип.цћаркер)
      ј≈—Ћ» e1.ц“ип = ePROC “ќ√ƒј
         мѕров.“ест((e1.у—ущ.у“ип.уѕредок.цћаркер = м онст.TVOID) »Ћ» (e1.у—ущ.у“ип.вызов = мƒецл.winapi), у оорд, 132);
         ≈—Ћ» e1.у—ущ.ParamCount > 0 “ќ√ƒј
            мƒецл.—ущность_ѕроверить(м онст.оп—кобкаЋев ругл);
            мƒецл.—ущн—лед_ѕолуч;
            X86.PushCall(begcall);
            Call(e1.у—ущ.у“ип.пол€.предыдущ(мƒецл.туѕоле));
            X86.¬ызов_«акончить
         ј≈—Ћ» м—кан.ц—ущность = м онст.оп—кобкаЋев ругл “ќ√ƒј
            —ущность—лед_ѕроверить(м онст.оп—кобкаѕр р);
            мƒецл.—ущн—лед_ѕолуч
          ќЌ≈÷;
         ≈—Ћ» e1.у—ущ.Level = 3 “ќ√ƒј
            ccall := 0
         ј≈—Ћ» e1.у—ущ.Level > мƒецл.curBlock.Level “ќ√ƒј
            ccall := 1
         »Ќј„≈
            ccall := 2
          ќЌ≈÷;
         X86.Call(e1.у—ущ.Number, Ћќ∆№, Ћќ∆№, e1.у—ущ.у“ип.вызов, ccall, e1.у—ущ.Level - 3, мƒецл.curBlock.Level - 3, e1.у—ущ.ParamSize, мƒецл.curBlock.LocalSize)
      ј≈—Ћ» e1.ц“ип ¬ {eSTPROC, eSYSPROC} “ќ√ƒј
          StProc(e1.у—ущ.StProc)
      ј≈—Ћ» (e1.ц“ип = м онст.eVAR) & (e1.у“ип.цћаркер = м онст.типѕ–ќ÷≈ƒ”–ј) “ќ√ƒј
         ≈—Ћ» м—кан.ц—ущность = м онст.оп—кобкаЋев ругл “ќ√ƒј
            мƒецл.—ущн—лед_ѕолуч;
            мѕров.“ест((e1.у“ип.уѕредок.цћаркер = м онст.TVOID) »Ћ» (e1.у“ип.вызов = мƒецл.winapi), у оорд, 132);
            X86.PushCall(begcall);
            Call(e1.у“ип.пол€.предыдущ(мƒецл.туѕоле));
            X86.¬ызов_«акончить;
            X86.CallVar(Ћќ∆№, Ћќ∆№, e1.у“ип.вызов, e1.у“ип.длина, мƒецл.curBlock.LocalSize)
         ј≈—Ћ» м—кан.ц—ущность = м онст.опѕрисвоить “ќ√ƒј
            мѕров.“ест(~e1.б„тение, у оорд, 115);
            —ущн—лед оорд_”ст(у оорд);
            Expr(e2);
            мѕров.“ест(AssComp(e2, e1.у“ип, Ћќ∆№), у оорд, 131);
            мѕров.“ест(~((e2.ц“ип = ePROC) & (e2.у—ущ.Level > 3)), у оорд, 116);
            ≈—Ћ» e2.ц“ип = м онст.eVAR “ќ√ƒј
               X86.Load(м онст.типѕ–ќ÷≈ƒ”–ј)
             ќЌ≈÷;
            X86.Save(м онст.типѕ–ќ÷≈ƒ”–ј)
         »Ќј„≈
            мѕров.“ест2(e1.у“ип.пол€.счЄтчик = 0, 155);
            мѕров.“ест((e1.у“ип.уѕредок.цћаркер = м онст.TVOID) »Ћ» (e1.у“ип.вызов = мƒецл.winapi), у оорд, 132);
            X86.CallVar(Ћќ∆№, Ћќ∆№, e1.у“ип.вызов, e1.у“ип.длина, мƒецл.curBlock.LocalSize)
          ќЌ≈÷
       ќЌ≈÷
    ќЌ≈÷ IdentOper;

ѕ–ќ÷≈ƒ”–ј  л—лово_¬ыбрать;
   Ќј„јЋќ
      м”тиль. од—трока_”ст(мƒецл.UnitNumber, мќш.у оорд.ц—трока);
      ¬џЅќ– м—кан.ц—ущность »«
         |м онст.сущ»ћя: IdentOper
         |м онст.кс≈—Ћ», м онст.ксѕќ ј: IfWhileOper(м—кан.ц—ущность = м онст.ксѕќ ј)
         |м онст.ксѕќ¬“ќ–:  л—лово_ѕќ¬“ќ–
         |м онст.ксƒЋя:  л—лово_ƒЋя
         |м онст.кс¬џЅќ–:  л—лово_¬џЅќ–
      »Ќј„≈
       ќЌ≈÷
    ќЌ≈÷  л—лово_¬ыбрать;

ѕ–ќ÷≈ƒ”–ј OpSeq;
   Ќј„јЋќ
       л—лово_¬ыбрать;
      ѕќ ј м—кан.ц—ущность = м онст.оп“чк«пт ƒ≈Ћј“№
         мƒецл.—ущн—лед_ѕолуч;
          л—лово_¬ыбрать
       ќЌ≈÷
    ќЌ≈÷ OpSeq;

ѕ–ќ÷≈ƒ”–ј —тарт;
   ѕ≈–≈ћ
      сам_им€, сам_путь, CName, CExt, путь, StdPath,
      temp, felf: м—тр.т—трока;
      стек: м—тек.т—тек;
      ќ—: мќ—.тќ—;
      у‘айл: м‘айл.ту‘айл;

   ѕ–ќ÷≈ƒ”–ј getver(): ÷≈Ћќ≈;
      ѕ≈–≈ћ
         res, i: ÷≈Ћќ≈;
         бќшибка: Ѕ”Ћ≈¬ќ;

      ѕ–ќ÷≈ƒ”–ј —имв_Hex(c: Ћ»“): Ѕ”Ћ≈¬ќ;
            ¬≈–Ќ”“№ ("0" <= c) & (c <= "9") »Ћ»
                  ("A" <= c) & (c <= "F") »Ћ»
                  ("a" <= c) & (c <= "f")
          ќЌ≈÷ —имв_Hex;

      ѕ–ќ÷≈ƒ”–ј —имвЌех_в_÷елое(c: Ћ»“): ÷≈Ћќ≈;
         ѕ≈–≈ћ
            число: ÷≈Ћќ≈;
         Ќј„јЋќ
            ≈—Ћ»  ("0" <= c) & (c <= "9") “ќ√ƒј
               число := ЌЋ»“(c) - ЌЋ»“("0")
            ј≈—Ћ» ("A" <= c) & (c <= "F") “ќ√ƒј
               число := ЌЋ»“(c) - ЌЋ»“("A") + 10
            ј≈—Ћ» ("a" <= c) & (c <= "f") “ќ√ƒј
               число := ЌЋ»“(c) - ЌЋ»“("a") + 10
             ќЌ≈÷
               ¬≈–Ќ”“№ число
          ќЌ≈÷ —имвЌех_в_÷елое;

      Ќј„јЋќ
         res := 0;
         i := 0;
         бќшибка := стек.стр–азмер[i] # "0";
         ƒќЅ(i);
         бќшибка := бќшибка »Ћ» (стек.стр–азмер[i] # "x");
         ƒќЅ(i);

         ѕќ ј ~бќшибка & —имв_Hex(стек.стр–азмер[i]) ƒ≈Ћј“№
            ƒќЅ(i)
          ќЌ≈÷;

         бќшибка := бќшибка »Ћ» (i = 2);

         ≈—Ћ» стек.стр–азмер[i] <= 20X “ќ√ƒј
            стек.стр–азмер[i] := 0X
         »Ќј„≈
            бќшибка := »—“»Ќј
          ќЌ≈÷;
         i := 2;
         ѕќ ј ~бќшибка & (стек.стр–азмер[i] # 0X) ƒ≈Ћј“№
            res := Ћ—Ћ(res, 4) + —имвЌех_в_÷елое(стек.стр–азмер[i]);
            ƒќЅ(i)
          ќЌ≈÷;
         ≈—Ћ» res = 0 “ќ√ƒј
               res := 1
          ќЌ≈÷
         ¬≈–Ќ”“№ res
       ќЌ≈÷ getver;

   Ќј„јЋќ
      Ќќ¬(у‘айл);
      ≈—Ћ» м”тиль.параметры_всего < 2 “ќ√ƒј
         мќш.—ообщ(мќш онст.ошћалоѕарам);
         мѕроц.«акончить(1)
       ќЌ≈÷;
      м”тиль.—трѕарам(сам_им€, 0);
      м”тиль.—трѕарам(у‘айл.стр»м€–асшир, 1);
      м”тиль.—трѕарам(ќ—.стр»м€, 2);
      м”тиль.—трѕарам(стек.стр–азмер, 3);
      п¬ыраж := Expr;
      pFactor := Factor;
      pOpSeq := OpSeq;
      м—тр.–азделить(у‘айл.стр»м€–асшир, путь, у‘айл.стр»м€, у‘айл.стр–асшир);
      ≈—Ћ» у‘айл.стр–асшир # м онст.расшир “ќ√ƒј
         мќш.—ообщ(121);
         мѕроц.«акончить(1)
       ќЌ≈÷;
      м—тр.–азделить(сам_им€, сам_путь, CName, CExt);
      temp := у‘айл.стр»м€;
      ≈—Ћ» м—тр.—равнить(ќ—.стр»м€, "obj") “ќ√ƒј
         ќ—.ц од := м онст.сисќбъект;
      м—тр.—ложить(temp, ".obj", temp)
      ј≈—Ћ» м—тр.—равнить(ќ—.стр»м€, "elf") “ќ√ƒј
         ќ—.ц од := м онст.сисЁльф;
         felf := сам_путь;
         м—тр.—ложить(felf, "Elf", felf);
         X86.setfelf(felf)
      ј≈—Ћ» м—тр.—равнить(ќ—.стр»м€, "kos") “ќ√ƒј
         ќ—.ц од := м онст.сис олибри;
         м—тр.—ложить(temp, ".kex", temp)
      ј≈—Ћ» м—тр.—равнить(ќ—.стр»м€, "con") “ќ√ƒј
         ќ—.ц од := м онст.сисћс онсоль;
         м—тр.—ложить(temp, ".exe", temp)
      ј≈—Ћ» м—тр.—равнить(ќ—.стр»м€, "gui") “ќ√ƒј
         ќ—.ц од := м онст.сисћсќкно;
         м—тр.—ложить(temp, ".exe", temp)
      ј≈—Ћ» м—тр.—равнить(ќ—.стр»м€, "dll") “ќ√ƒј
         ќ—.ц од := м онст.сисћсƒЋЋ;
         м—тр.—ложить(temp, ".dll", temp)
      »Ќј„≈
         мќш.—ообщ(мќш онст.ошќшѕарам);
         мѕроц.«акончить(1)
       ќЌ≈÷;
      ≈—Ћ» ќ—.ц од ¬ {1,2,3,4} “ќ√ƒј
         м—тек.ц–азмер_”ст(стек)
      »Ќј„≈
         стек.ц–азмер := 1
       ќЌ≈÷;
      ≈—Ћ» ќ—.ц од = 6 “ќ√ƒј
         стек.ц–азмер := getver()
       ќЌ≈÷;
      м—тр.—ложить(сам_путь, "Lib", сам_путь);
      м—тр.—ложить(сам_путь, м онст.слэш, сам_путь);
      ≈—Ћ» ќ—.ц од = 5 “ќ√ƒј
         м—тр.—ложить(сам_путь, "Linux32", сам_путь)
      ј≈—Ћ» ќ—.ц од ¬ {4, 6} “ќ√ƒј
         м—тр.—ложить(сам_путь, "KolibriOS", сам_путь)
      ј≈—Ћ» ќ—.ц од ¬ {1, 2, 3} “ќ√ƒј
         м—тр.—ложить(сам_путь, "Windows32", сам_путь)
       ќЌ≈÷;
      м—тр.—ложить(сам_путь, м онст.слэш, сам_путь);
      X86.Ќастроить(мѕам.ћало, ќ—.ц од);
      X86.Prolog(temp);
      мƒецл. од_Ќастроить(сам_путь, путь, у‘айл.стр»м€, у‘айл.стр–асшир, ќ—.ц од ¬ {1, 2, 3}, OpSeq, Expr, AssComp, sttypes);
      мƒецл. омпилировать(ќ—.ц од, стек.ц–азмер);
      м¬ин онс.÷вет_”ст(м¬ин онс.белый, м¬ин онс.синий);
      м онс.—трока_ѕечать("   + омпил€ци€ успешна!"); м онс.Ќов—тр;
      м¬ин онс.÷вет_”ст(м¬ин онс.св∆Єлтый, м¬ин онс.чЄрный);
      м онс.¬рем€_«атрачено;
      м¬ин онс.÷вет_”ст(м¬ин онс.белый, м¬ин онс.чЄрный)
    ќЌ≈÷ —тарт;

Ќј„јЋќ
   —тарт
 ќЌ≈÷ Compiler.
