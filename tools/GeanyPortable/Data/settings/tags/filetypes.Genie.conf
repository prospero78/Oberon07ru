# For complete documentation of this file, please see Geany's main documentation
[styling]
# foreground;background;bold;italic
default=default
comment=comment
commentline=comment
commentdoc=commentdoc
number=number
word=keyword
word2=keyword2
string=string
character=string
uuid=extra
preprocessor=preprocessor
operator=operator
identifier=default
stringeol=stringeol
# @"verbatim"
verbatim=extra
# (/regex/)
regex=extra
commentlinedoc=commentdoc,bold
commentdockeyword=commentdoc,bold,italic
commentdockeyworderror=commentdoc
globalclass=type

[keywords]
# all items must be in one line
primary=abstract and array as assert async bool break byte case cast char class const construct continue date datetime decimal dedent def default delegate delete dict div do double downto dynamic else ensures enum errordomain event except exception extern false final finally float for foreach get hash identifier if implements implements in init inline int int16 int32 int64 int8 interface internal is isa list lock long max min namespace namespace new not null object of or otherwise out override owned params pass print private prop protected public raise raises readonly ref requires return sbyte self set short single sizeof size_t ssize_t static string struct super to true try typeof uint uint32 uint64 uint8 ulong unichar unit16 unless unowned uses uses ushort var virtual void volatile weak when while writeonly yield
#secondary=
# these are some doxygen keywords (incomplete)
docComment=attention author brief bug class code date def enum example exception file fn namespace note param remarks return see since struct throw todo typedef var version warning union

[settings]
# Vala uses the C lexer
lexer_filetype=C
tag_parser=Python

# default extension used when saving files
extension=gs

# the following characters are these which a "word" can contains, see documentation
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# if only single comment char is supported like # in this file, leave comment_close blank
#comment_open=//
#comment_close=
# this is an alternative way, so multiline comments are used
comment_open=/*
comment_close=*/

[build-menu]
FT_00_LB=_Compile
FT_00_CM=valac -c "%f"
FT_00_WD=
FT_01_LB=_Build
FT_01_CM=valac "%f"
FT_01_WD=
